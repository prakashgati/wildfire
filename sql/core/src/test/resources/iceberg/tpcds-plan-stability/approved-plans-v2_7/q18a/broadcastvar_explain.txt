== Physical Plan ==
TakeOrderedAndProject (158)
+- Union (157)
   :- * HashAggregate (39)
   :  +- Exchange (38)
   :     +- * HashAggregate (37)
   :        +- * Project (36)
   :           +- * BroadcastHashJoin Inner BuildRight (35)
   :              :- * Project (30)
   :              :  +- * BroadcastHashJoin Inner BuildRight (29)
   :              :     :- * Project (27)
   :              :     :  +- * BroadcastHashJoin Inner BuildRight (26)
   :              :     :     :- * Project (21)
   :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (20)
   :              :     :     :     :- * Project (15)
   :              :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (14)
   :              :     :     :     :     :- * Project (9)
   :              :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
   :              :     :     :     :     :     :- * Project (3)
   :              :     :     :     :     :     :  +- * Filter (2)
   :              :     :     :     :     :     :     +- BatchScan spark_catalog.default.catalog_sales (1)
   :              :     :     :     :     :     +- BroadcastExchange (7)
   :              :     :     :     :     :        +- * Project (6)
   :              :     :     :     :     :           +- * Filter (5)
   :              :     :     :     :     :              +- BatchScan spark_catalog.default.customer_demographics (4)
   :              :     :     :     :     +- BroadcastExchange (13)
   :              :     :     :     :        +- * Project (12)
   :              :     :     :     :           +- * Filter (11)
   :              :     :     :     :              +- BatchScan spark_catalog.default.customer (10)
   :              :     :     :     +- BroadcastExchange (19)
   :              :     :     :        +- * Project (18)
   :              :     :     :           +- * Filter (17)
   :              :     :     :              +- BatchScan spark_catalog.default.customer_demographics (16)
   :              :     :     +- BroadcastExchange (25)
   :              :     :        +- * Project (24)
   :              :     :           +- * Filter (23)
   :              :     :              +- BatchScan spark_catalog.default.customer_address (22)
   :              :     +- ReusedExchange (28)
   :              +- BroadcastExchange (34)
   :                 +- * Project (33)
   :                    +- * Filter (32)
   :                       +- BatchScan spark_catalog.default.item (31)
   :- * HashAggregate (69)
   :  +- Exchange (68)
   :     +- * HashAggregate (67)
   :        +- * Project (66)
   :           +- * BroadcastHashJoin Inner BuildRight (65)
   :              :- * Project (63)
   :              :  +- * BroadcastHashJoin Inner BuildRight (62)
   :              :     :- * Project (60)
   :              :     :  +- * BroadcastHashJoin Inner BuildRight (59)
   :              :     :     :- * Project (54)
   :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (53)
   :              :     :     :     :- * Project (51)
   :              :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (50)
   :              :     :     :     :     :- * Project (45)
   :              :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (44)
   :              :     :     :     :     :     :- * Project (42)
   :              :     :     :     :     :     :  +- * Filter (41)
   :              :     :     :     :     :     :     +- BatchScan spark_catalog.default.catalog_sales (40)
   :              :     :     :     :     :     +- ReusedExchange (43)
   :              :     :     :     :     +- BroadcastExchange (49)
   :              :     :     :     :        +- * Project (48)
   :              :     :     :     :           +- * Filter (47)
   :              :     :     :     :              +- BatchScan spark_catalog.default.customer (46)
   :              :     :     :     +- ReusedExchange (52)
   :              :     :     +- BroadcastExchange (58)
   :              :     :        +- * Project (57)
   :              :     :           +- * Filter (56)
   :              :     :              +- BatchScan spark_catalog.default.customer_address (55)
   :              :     +- ReusedExchange (61)
   :              +- ReusedExchange (64)
   :- * HashAggregate (99)
   :  +- Exchange (98)
   :     +- * HashAggregate (97)
   :        +- * Project (96)
   :           +- * BroadcastHashJoin Inner BuildRight (95)
   :              :- * Project (93)
   :              :  +- * BroadcastHashJoin Inner BuildRight (92)
   :              :     :- * Project (90)
   :              :     :  +- * BroadcastHashJoin Inner BuildRight (89)
   :              :     :     :- * Project (84)
   :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (83)
   :              :     :     :     :- * Project (81)
   :              :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (80)
   :              :     :     :     :     :- * Project (75)
   :              :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (74)
   :              :     :     :     :     :     :- * Project (72)
   :              :     :     :     :     :     :  +- * Filter (71)
   :              :     :     :     :     :     :     +- BatchScan spark_catalog.default.catalog_sales (70)
   :              :     :     :     :     :     +- ReusedExchange (73)
   :              :     :     :     :     +- BroadcastExchange (79)
   :              :     :     :     :        +- * Project (78)
   :              :     :     :     :           +- * Filter (77)
   :              :     :     :     :              +- BatchScan spark_catalog.default.customer (76)
   :              :     :     :     +- ReusedExchange (82)
   :              :     :     +- BroadcastExchange (88)
   :              :     :        +- * Project (87)
   :              :     :           +- * Filter (86)
   :              :     :              +- BatchScan spark_catalog.default.customer_address (85)
   :              :     +- ReusedExchange (91)
   :              +- ReusedExchange (94)
   :- * HashAggregate (129)
   :  +- Exchange (128)
   :     +- * HashAggregate (127)
   :        +- * Project (126)
   :           +- * BroadcastHashJoin Inner BuildRight (125)
   :              :- * Project (123)
   :              :  +- * BroadcastHashJoin Inner BuildRight (122)
   :              :     :- * Project (120)
   :              :     :  +- * BroadcastHashJoin Inner BuildRight (119)
   :              :     :     :- * Project (114)
   :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (113)
   :              :     :     :     :- * Project (111)
   :              :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (110)
   :              :     :     :     :     :- * Project (105)
   :              :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (104)
   :              :     :     :     :     :     :- * Project (102)
   :              :     :     :     :     :     :  +- * Filter (101)
   :              :     :     :     :     :     :     +- BatchScan spark_catalog.default.catalog_sales (100)
   :              :     :     :     :     :     +- ReusedExchange (103)
   :              :     :     :     :     +- BroadcastExchange (109)
   :              :     :     :     :        +- * Project (108)
   :              :     :     :     :           +- * Filter (107)
   :              :     :     :     :              +- BatchScan spark_catalog.default.customer (106)
   :              :     :     :     +- ReusedExchange (112)
   :              :     :     +- BroadcastExchange (118)
   :              :     :        +- * Project (117)
   :              :     :           +- * Filter (116)
   :              :     :              +- BatchScan spark_catalog.default.customer_address (115)
   :              :     +- ReusedExchange (121)
   :              +- ReusedExchange (124)
   +- * HashAggregate (156)
      +- Exchange (155)
         +- * HashAggregate (154)
            +- * Project (153)
               +- * BroadcastHashJoin Inner BuildRight (152)
                  :- * Project (147)
                  :  +- * BroadcastHashJoin Inner BuildRight (146)
                  :     :- * Project (144)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (143)
                  :     :     :- * Project (141)
                  :     :     :  +- * BroadcastHashJoin Inner BuildRight (140)
                  :     :     :     :- * Project (138)
                  :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (137)
                  :     :     :     :     :- * Project (135)
                  :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (134)
                  :     :     :     :     :     :- * Project (132)
                  :     :     :     :     :     :  +- * Filter (131)
                  :     :     :     :     :     :     +- BatchScan spark_catalog.default.catalog_sales (130)
                  :     :     :     :     :     +- ReusedExchange (133)
                  :     :     :     :     +- ReusedExchange (136)
                  :     :     :     +- ReusedExchange (139)
                  :     :     +- ReusedExchange (142)
                  :     +- ReusedExchange (145)
                  +- BroadcastExchange (151)
                     +- * Project (150)
                        +- * Filter (149)
                           +- BatchScan spark_catalog.default.item (148)


(1) BatchScan spark_catalog.default.catalog_sales
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_bill_cdemo_sk IS NOT NULL, cs_bill_customer_sk IS NOT NULL, cs_sold_date_sk IS NOT NULL, cs_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 7]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Condition : (((isnotnull(cs_bill_cdemo_sk#3) AND isnotnull(cs_bill_customer_sk#2)) AND isnotnull(cs_sold_date_sk#1)) AND isnotnull(cs_item_sk#4))

(3) Project [codegen id : 7]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]

(4) BatchScan spark_catalog.default.customer_demographics
Output [4]: [cd_demo_sk#10, cd_gender#11, cd_education_status#12, cd_dep_count#13]
spark_catalog.default.customer_demographics [scan class = SparkBatchQueryScan] [filters=cd_gender IS NOT NULL, cd_education_status IS NOT NULL, cd_gender = 'M', cd_education_status = 'College', cd_demo_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [4]: [cd_demo_sk#10, cd_gender#11, cd_education_status#12, cd_dep_count#13]
Condition : ((((isnotnull(cd_gender#11) AND isnotnull(cd_education_status#12)) AND (cd_gender#11 = M)) AND (cd_education_status#12 = College)) AND isnotnull(cd_demo_sk#10))

(6) Project [codegen id : 1]
Output [2]: [cd_demo_sk#10, cd_dep_count#13]
Input [4]: [cd_demo_sk#10, cd_gender#11, cd_education_status#12, cd_dep_count#13]

(7) BroadcastExchange
Input [2]: [cd_demo_sk#10, cd_dep_count#13]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_bill_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#10]
Join condition: None

(9) Project [codegen id : 7]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13]
Input [11]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_demo_sk#10, cd_dep_count#13]

(10) BatchScan spark_catalog.default.customer
Output [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_birth_month IN (9, 5, 12, 4, 1, 10), c_customer_sk IS NOT NULL, c_current_cdemo_sk IS NOT NULL, c_current_addr_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(11) Filter [codegen id : 2]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
Condition : (((c_birth_month#17 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#14)) AND isnotnull(c_current_cdemo_sk#15)) AND isnotnull(c_current_addr_sk#16))

(12) Project [codegen id : 2]
Output [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]

(13) BroadcastExchange
Input [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_bill_customer_sk#2]
Right keys [1]: [c_customer_sk#14]
Join condition: None

(15) Project [codegen id : 7]
Output [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [13]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(16) BatchScan spark_catalog.default.customer_demographics
Output [1]: [cd_demo_sk#19]
spark_catalog.default.customer_demographics [scan class = SparkBatchQueryScan] [filters=cd_demo_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(17) Filter [codegen id : 3]
Input [1]: [cd_demo_sk#19]
Condition : isnotnull(cd_demo_sk#19)

(18) Project [codegen id : 3]
Output [1]: [cd_demo_sk#19]
Input [1]: [cd_demo_sk#19]

(19) BroadcastExchange
Input [1]: [cd_demo_sk#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(20) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_cdemo_sk#15]
Right keys [1]: [cd_demo_sk#19]
Join condition: None

(21) Project [codegen id : 7]
Output [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18]
Input [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18, cd_demo_sk#19]

(22) BatchScan spark_catalog.default.customer_address
Output [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]
spark_catalog.default.customer_address [scan class = SparkBatchQueryScan] [filters=ca_state IN ('ND', 'WI', 'AL', 'NC', 'OK', 'MS', 'TN'), ca_address_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(23) Filter [codegen id : 4]
Input [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]
Condition : (ca_state#22 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#20))

(24) Project [codegen id : 4]
Output [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]
Input [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]

(25) BroadcastExchange
Input [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

(26) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_addr_sk#16]
Right keys [1]: [ca_address_sk#20]
Join condition: None

(27) Project [codegen id : 7]
Output [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#22, ca_country#23]
Input [14]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18, ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]

(28) ReusedExchange [Reuses operator id: 162]
Output [1]: [d_date_sk#24]

(29) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_sold_date_sk#1]
Right keys [1]: [d_date_sk#24]
Join condition: None

(30) Project [codegen id : 7]
Output [11]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#22, ca_country#23]
Input [13]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#22, ca_country#23, d_date_sk#24]

(31) BatchScan spark_catalog.default.item
Output [2]: [i_item_sk#25, i_item_id#26]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(32) Filter [codegen id : 6]
Input [2]: [i_item_sk#25, i_item_id#26]
Condition : isnotnull(i_item_sk#25)

(33) Project [codegen id : 6]
Output [2]: [i_item_sk#25, i_item_id#26]
Input [2]: [i_item_sk#25, i_item_id#26]

(34) BroadcastExchange
Input [2]: [i_item_sk#25, i_item_id#26]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

(35) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [i_item_sk#25]
Join condition: None

(36) Project [codegen id : 7]
Output [11]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, cast(cs_quantity#5 as decimal(12,2)) AS agg1#27, cast(cs_list_price#6 as decimal(12,2)) AS agg2#28, cast(cs_coupon_amt#8 as decimal(12,2)) AS agg3#29, cast(cs_sales_price#7 as decimal(12,2)) AS agg4#30, cast(cs_net_profit#9 as decimal(12,2)) AS agg5#31, cast(c_birth_year#18 as decimal(12,2)) AS agg6#32, cast(cd_dep_count#13 as decimal(12,2)) AS agg7#33]
Input [13]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#22, ca_country#23, i_item_sk#25, i_item_id#26]

(37) HashAggregate [codegen id : 7]
Input [11]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, agg1#27, agg2#28, agg3#29, agg4#30, agg5#31, agg6#32, agg7#33]
Keys [4]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21]
Functions [7]: [partial_avg(agg1#27), partial_avg(agg2#28), partial_avg(agg3#29), partial_avg(agg4#30), partial_avg(agg5#31), partial_avg(agg6#32), partial_avg(agg7#33)]
Aggregate Attributes [14]: [sum#34, count#35, sum#36, count#37, sum#38, count#39, sum#40, count#41, sum#42, count#43, sum#44, count#45, sum#46, count#47]
Results [18]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, sum#48, count#49, sum#50, count#51, sum#52, count#53, sum#54, count#55, sum#56, count#57, sum#58, count#59, sum#60, count#61]

(38) Exchange
Input [18]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, sum#48, count#49, sum#50, count#51, sum#52, count#53, sum#54, count#55, sum#56, count#57, sum#58, count#59, sum#60, count#61]
Arguments: hashpartitioning(i_item_id#26, ca_country#23, ca_state#22, ca_county#21, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(39) HashAggregate [codegen id : 8]
Input [18]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, sum#48, count#49, sum#50, count#51, sum#52, count#53, sum#54, count#55, sum#56, count#57, sum#58, count#59, sum#60, count#61]
Keys [4]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21]
Functions [7]: [avg(agg1#27), avg(agg2#28), avg(agg3#29), avg(agg4#30), avg(agg5#31), avg(agg6#32), avg(agg7#33)]
Aggregate Attributes [7]: [avg(agg1#27)#62, avg(agg2#28)#63, avg(agg3#29)#64, avg(agg4#30)#65, avg(agg5#31)#66, avg(agg6#32)#67, avg(agg7#33)#68]
Results [11]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, avg(agg1#27)#62 AS agg1#69, avg(agg2#28)#63 AS agg2#70, avg(agg3#29)#64 AS agg3#71, avg(agg4#30)#65 AS agg4#72, avg(agg5#31)#66 AS agg5#73, avg(agg6#32)#67 AS agg6#74, avg(agg7#33)#68 AS agg7#75]

(40) BatchScan spark_catalog.default.catalog_sales
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_bill_cdemo_sk IS NOT NULL, cs_bill_customer_sk IS NOT NULL, cs_sold_date_sk IS NOT NULL, cs_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(41) Filter [codegen id : 15]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Condition : (((isnotnull(cs_bill_cdemo_sk#3) AND isnotnull(cs_bill_customer_sk#2)) AND isnotnull(cs_sold_date_sk#1)) AND isnotnull(cs_item_sk#4))

(42) Project [codegen id : 15]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]

(43) ReusedExchange [Reuses operator id: 7]
Output [2]: [cd_demo_sk#10, cd_dep_count#13]

(44) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_bill_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#10]
Join condition: None

(45) Project [codegen id : 15]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13]
Input [11]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_demo_sk#10, cd_dep_count#13]

(46) BatchScan spark_catalog.default.customer
Output [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_birth_month IN (9, 5, 12, 4, 1, 10), c_customer_sk IS NOT NULL, c_current_cdemo_sk IS NOT NULL, c_current_addr_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(47) Filter [codegen id : 10]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
Condition : (((c_birth_month#17 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#14)) AND isnotnull(c_current_cdemo_sk#15)) AND isnotnull(c_current_addr_sk#16))

(48) Project [codegen id : 10]
Output [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]

(49) BroadcastExchange
Input [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

(50) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_bill_customer_sk#2]
Right keys [1]: [c_customer_sk#14]
Join condition: None

(51) Project [codegen id : 15]
Output [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [13]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(52) ReusedExchange [Reuses operator id: 19]
Output [1]: [cd_demo_sk#19]

(53) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [c_current_cdemo_sk#15]
Right keys [1]: [cd_demo_sk#19]
Join condition: None

(54) Project [codegen id : 15]
Output [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18]
Input [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18, cd_demo_sk#19]

(55) BatchScan spark_catalog.default.customer_address
Output [3]: [ca_address_sk#20, ca_state#22, ca_country#23]
spark_catalog.default.customer_address [scan class = SparkBatchQueryScan] [filters=ca_state IN ('ND', 'WI', 'AL', 'NC', 'OK', 'MS', 'TN'), ca_address_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(56) Filter [codegen id : 12]
Input [3]: [ca_address_sk#20, ca_state#22, ca_country#23]
Condition : (ca_state#22 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#20))

(57) Project [codegen id : 12]
Output [3]: [ca_address_sk#20, ca_state#22, ca_country#23]
Input [3]: [ca_address_sk#20, ca_state#22, ca_country#23]

(58) BroadcastExchange
Input [3]: [ca_address_sk#20, ca_state#22, ca_country#23]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

(59) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [c_current_addr_sk#16]
Right keys [1]: [ca_address_sk#20]
Join condition: None

(60) Project [codegen id : 15]
Output [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_state#22, ca_country#23]
Input [13]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18, ca_address_sk#20, ca_state#22, ca_country#23]

(61) ReusedExchange [Reuses operator id: 162]
Output [1]: [d_date_sk#24]

(62) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_sold_date_sk#1]
Right keys [1]: [d_date_sk#24]
Join condition: None

(63) Project [codegen id : 15]
Output [10]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_state#22, ca_country#23]
Input [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_state#22, ca_country#23, d_date_sk#24]

(64) ReusedExchange [Reuses operator id: 34]
Output [2]: [i_item_sk#25, i_item_id#26]

(65) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [i_item_sk#25]
Join condition: None

(66) Project [codegen id : 15]
Output [10]: [i_item_id#26, ca_country#23, ca_state#22, cast(cs_quantity#5 as decimal(12,2)) AS agg1#27, cast(cs_list_price#6 as decimal(12,2)) AS agg2#28, cast(cs_coupon_amt#8 as decimal(12,2)) AS agg3#29, cast(cs_sales_price#7 as decimal(12,2)) AS agg4#30, cast(cs_net_profit#9 as decimal(12,2)) AS agg5#31, cast(c_birth_year#18 as decimal(12,2)) AS agg6#32, cast(cd_dep_count#13 as decimal(12,2)) AS agg7#33]
Input [12]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_state#22, ca_country#23, i_item_sk#25, i_item_id#26]

(67) HashAggregate [codegen id : 15]
Input [10]: [i_item_id#26, ca_country#23, ca_state#22, agg1#27, agg2#28, agg3#29, agg4#30, agg5#31, agg6#32, agg7#33]
Keys [3]: [i_item_id#26, ca_country#23, ca_state#22]
Functions [7]: [partial_avg(agg1#27), partial_avg(agg2#28), partial_avg(agg3#29), partial_avg(agg4#30), partial_avg(agg5#31), partial_avg(agg6#32), partial_avg(agg7#33)]
Aggregate Attributes [14]: [sum#76, count#77, sum#78, count#79, sum#80, count#81, sum#82, count#83, sum#84, count#85, sum#86, count#87, sum#88, count#89]
Results [17]: [i_item_id#26, ca_country#23, ca_state#22, sum#90, count#91, sum#92, count#93, sum#94, count#95, sum#96, count#97, sum#98, count#99, sum#100, count#101, sum#102, count#103]

(68) Exchange
Input [17]: [i_item_id#26, ca_country#23, ca_state#22, sum#90, count#91, sum#92, count#93, sum#94, count#95, sum#96, count#97, sum#98, count#99, sum#100, count#101, sum#102, count#103]
Arguments: hashpartitioning(i_item_id#26, ca_country#23, ca_state#22, 5), ENSURE_REQUIREMENTS, [plan_id=9]

(69) HashAggregate [codegen id : 16]
Input [17]: [i_item_id#26, ca_country#23, ca_state#22, sum#90, count#91, sum#92, count#93, sum#94, count#95, sum#96, count#97, sum#98, count#99, sum#100, count#101, sum#102, count#103]
Keys [3]: [i_item_id#26, ca_country#23, ca_state#22]
Functions [7]: [avg(agg1#27), avg(agg2#28), avg(agg3#29), avg(agg4#30), avg(agg5#31), avg(agg6#32), avg(agg7#33)]
Aggregate Attributes [7]: [avg(agg1#27)#104, avg(agg2#28)#105, avg(agg3#29)#106, avg(agg4#30)#107, avg(agg5#31)#108, avg(agg6#32)#109, avg(agg7#33)#110]
Results [11]: [i_item_id#26, ca_country#23, ca_state#22, null AS county#111, avg(agg1#27)#104 AS agg1#112, avg(agg2#28)#105 AS agg2#113, avg(agg3#29)#106 AS agg3#114, avg(agg4#30)#107 AS agg4#115, avg(agg5#31)#108 AS agg5#116, avg(agg6#32)#109 AS agg6#117, avg(agg7#33)#110 AS agg7#118]

(70) BatchScan spark_catalog.default.catalog_sales
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_bill_cdemo_sk IS NOT NULL, cs_bill_customer_sk IS NOT NULL, cs_sold_date_sk IS NOT NULL, cs_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(71) Filter [codegen id : 23]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Condition : (((isnotnull(cs_bill_cdemo_sk#3) AND isnotnull(cs_bill_customer_sk#2)) AND isnotnull(cs_sold_date_sk#1)) AND isnotnull(cs_item_sk#4))

(72) Project [codegen id : 23]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]

(73) ReusedExchange [Reuses operator id: 7]
Output [2]: [cd_demo_sk#10, cd_dep_count#13]

(74) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_bill_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#10]
Join condition: None

(75) Project [codegen id : 23]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13]
Input [11]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_demo_sk#10, cd_dep_count#13]

(76) BatchScan spark_catalog.default.customer
Output [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_birth_month IN (9, 5, 12, 4, 1, 10), c_customer_sk IS NOT NULL, c_current_cdemo_sk IS NOT NULL, c_current_addr_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(77) Filter [codegen id : 18]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
Condition : (((c_birth_month#17 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#14)) AND isnotnull(c_current_cdemo_sk#15)) AND isnotnull(c_current_addr_sk#16))

(78) Project [codegen id : 18]
Output [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]

(79) BroadcastExchange
Input [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=10]

(80) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_bill_customer_sk#2]
Right keys [1]: [c_customer_sk#14]
Join condition: None

(81) Project [codegen id : 23]
Output [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [13]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(82) ReusedExchange [Reuses operator id: 19]
Output [1]: [cd_demo_sk#19]

(83) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [c_current_cdemo_sk#15]
Right keys [1]: [cd_demo_sk#19]
Join condition: None

(84) Project [codegen id : 23]
Output [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18]
Input [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18, cd_demo_sk#19]

(85) BatchScan spark_catalog.default.customer_address
Output [3]: [ca_address_sk#20, ca_state#22, ca_country#23]
spark_catalog.default.customer_address [scan class = SparkBatchQueryScan] [filters=ca_state IN ('ND', 'WI', 'AL', 'NC', 'OK', 'MS', 'TN'), ca_address_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(86) Filter [codegen id : 20]
Input [3]: [ca_address_sk#20, ca_state#22, ca_country#23]
Condition : (ca_state#22 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#20))

(87) Project [codegen id : 20]
Output [2]: [ca_address_sk#20, ca_country#23]
Input [3]: [ca_address_sk#20, ca_state#22, ca_country#23]

(88) BroadcastExchange
Input [2]: [ca_address_sk#20, ca_country#23]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11]

(89) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [c_current_addr_sk#16]
Right keys [1]: [ca_address_sk#20]
Join condition: None

(90) Project [codegen id : 23]
Output [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_country#23]
Input [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18, ca_address_sk#20, ca_country#23]

(91) ReusedExchange [Reuses operator id: 162]
Output [1]: [d_date_sk#24]

(92) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_sold_date_sk#1]
Right keys [1]: [d_date_sk#24]
Join condition: None

(93) Project [codegen id : 23]
Output [9]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_country#23]
Input [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_country#23, d_date_sk#24]

(94) ReusedExchange [Reuses operator id: 34]
Output [2]: [i_item_sk#25, i_item_id#26]

(95) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [i_item_sk#25]
Join condition: None

(96) Project [codegen id : 23]
Output [9]: [i_item_id#26, ca_country#23, cast(cs_quantity#5 as decimal(12,2)) AS agg1#27, cast(cs_list_price#6 as decimal(12,2)) AS agg2#28, cast(cs_coupon_amt#8 as decimal(12,2)) AS agg3#29, cast(cs_sales_price#7 as decimal(12,2)) AS agg4#30, cast(cs_net_profit#9 as decimal(12,2)) AS agg5#31, cast(c_birth_year#18 as decimal(12,2)) AS agg6#32, cast(cd_dep_count#13 as decimal(12,2)) AS agg7#33]
Input [11]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, ca_country#23, i_item_sk#25, i_item_id#26]

(97) HashAggregate [codegen id : 23]
Input [9]: [i_item_id#26, ca_country#23, agg1#27, agg2#28, agg3#29, agg4#30, agg5#31, agg6#32, agg7#33]
Keys [2]: [i_item_id#26, ca_country#23]
Functions [7]: [partial_avg(agg1#27), partial_avg(agg2#28), partial_avg(agg3#29), partial_avg(agg4#30), partial_avg(agg5#31), partial_avg(agg6#32), partial_avg(agg7#33)]
Aggregate Attributes [14]: [sum#119, count#120, sum#121, count#122, sum#123, count#124, sum#125, count#126, sum#127, count#128, sum#129, count#130, sum#131, count#132]
Results [16]: [i_item_id#26, ca_country#23, sum#133, count#134, sum#135, count#136, sum#137, count#138, sum#139, count#140, sum#141, count#142, sum#143, count#144, sum#145, count#146]

(98) Exchange
Input [16]: [i_item_id#26, ca_country#23, sum#133, count#134, sum#135, count#136, sum#137, count#138, sum#139, count#140, sum#141, count#142, sum#143, count#144, sum#145, count#146]
Arguments: hashpartitioning(i_item_id#26, ca_country#23, 5), ENSURE_REQUIREMENTS, [plan_id=12]

(99) HashAggregate [codegen id : 24]
Input [16]: [i_item_id#26, ca_country#23, sum#133, count#134, sum#135, count#136, sum#137, count#138, sum#139, count#140, sum#141, count#142, sum#143, count#144, sum#145, count#146]
Keys [2]: [i_item_id#26, ca_country#23]
Functions [7]: [avg(agg1#27), avg(agg2#28), avg(agg3#29), avg(agg4#30), avg(agg5#31), avg(agg6#32), avg(agg7#33)]
Aggregate Attributes [7]: [avg(agg1#27)#147, avg(agg2#28)#148, avg(agg3#29)#149, avg(agg4#30)#150, avg(agg5#31)#151, avg(agg6#32)#152, avg(agg7#33)#153]
Results [11]: [i_item_id#26, ca_country#23, null AS ca_state#154, null AS county#155, avg(agg1#27)#147 AS agg1#156, avg(agg2#28)#148 AS agg2#157, avg(agg3#29)#149 AS agg3#158, avg(agg4#30)#150 AS agg4#159, avg(agg5#31)#151 AS agg5#160, avg(agg6#32)#152 AS agg6#161, avg(agg7#33)#153 AS agg7#162]

(100) BatchScan spark_catalog.default.catalog_sales
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_bill_cdemo_sk IS NOT NULL, cs_bill_customer_sk IS NOT NULL, cs_sold_date_sk IS NOT NULL, cs_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(101) Filter [codegen id : 31]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Condition : (((isnotnull(cs_bill_cdemo_sk#3) AND isnotnull(cs_bill_customer_sk#2)) AND isnotnull(cs_sold_date_sk#1)) AND isnotnull(cs_item_sk#4))

(102) Project [codegen id : 31]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]

(103) ReusedExchange [Reuses operator id: 7]
Output [2]: [cd_demo_sk#10, cd_dep_count#13]

(104) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_bill_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#10]
Join condition: None

(105) Project [codegen id : 31]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13]
Input [11]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_demo_sk#10, cd_dep_count#13]

(106) BatchScan spark_catalog.default.customer
Output [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_birth_month IN (9, 5, 12, 4, 1, 10), c_customer_sk IS NOT NULL, c_current_cdemo_sk IS NOT NULL, c_current_addr_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(107) Filter [codegen id : 26]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
Condition : (((c_birth_month#17 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#14)) AND isnotnull(c_current_cdemo_sk#15)) AND isnotnull(c_current_addr_sk#16))

(108) Project [codegen id : 26]
Output [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]

(109) BroadcastExchange
Input [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=13]

(110) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_bill_customer_sk#2]
Right keys [1]: [c_customer_sk#14]
Join condition: None

(111) Project [codegen id : 31]
Output [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [13]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(112) ReusedExchange [Reuses operator id: 19]
Output [1]: [cd_demo_sk#19]

(113) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [c_current_cdemo_sk#15]
Right keys [1]: [cd_demo_sk#19]
Join condition: None

(114) Project [codegen id : 31]
Output [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18]
Input [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18, cd_demo_sk#19]

(115) BatchScan spark_catalog.default.customer_address
Output [2]: [ca_address_sk#20, ca_state#22]
spark_catalog.default.customer_address [scan class = SparkBatchQueryScan] [filters=ca_state IN ('ND', 'WI', 'AL', 'NC', 'OK', 'MS', 'TN'), ca_address_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(116) Filter [codegen id : 28]
Input [2]: [ca_address_sk#20, ca_state#22]
Condition : (ca_state#22 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#20))

(117) Project [codegen id : 28]
Output [1]: [ca_address_sk#20]
Input [2]: [ca_address_sk#20, ca_state#22]

(118) BroadcastExchange
Input [1]: [ca_address_sk#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=14]

(119) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [c_current_addr_sk#16]
Right keys [1]: [ca_address_sk#20]
Join condition: None

(120) Project [codegen id : 31]
Output [9]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18]
Input [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18, ca_address_sk#20]

(121) ReusedExchange [Reuses operator id: 162]
Output [1]: [d_date_sk#24]

(122) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_sold_date_sk#1]
Right keys [1]: [d_date_sk#24]
Join condition: None

(123) Project [codegen id : 31]
Output [8]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18]
Input [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, d_date_sk#24]

(124) ReusedExchange [Reuses operator id: 34]
Output [2]: [i_item_sk#25, i_item_id#26]

(125) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [i_item_sk#25]
Join condition: None

(126) Project [codegen id : 31]
Output [8]: [i_item_id#26, cast(cs_quantity#5 as decimal(12,2)) AS agg1#27, cast(cs_list_price#6 as decimal(12,2)) AS agg2#28, cast(cs_coupon_amt#8 as decimal(12,2)) AS agg3#29, cast(cs_sales_price#7 as decimal(12,2)) AS agg4#30, cast(cs_net_profit#9 as decimal(12,2)) AS agg5#31, cast(c_birth_year#18 as decimal(12,2)) AS agg6#32, cast(cd_dep_count#13 as decimal(12,2)) AS agg7#33]
Input [10]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, i_item_sk#25, i_item_id#26]

(127) HashAggregate [codegen id : 31]
Input [8]: [i_item_id#26, agg1#27, agg2#28, agg3#29, agg4#30, agg5#31, agg6#32, agg7#33]
Keys [1]: [i_item_id#26]
Functions [7]: [partial_avg(agg1#27), partial_avg(agg2#28), partial_avg(agg3#29), partial_avg(agg4#30), partial_avg(agg5#31), partial_avg(agg6#32), partial_avg(agg7#33)]
Aggregate Attributes [14]: [sum#163, count#164, sum#165, count#166, sum#167, count#168, sum#169, count#170, sum#171, count#172, sum#173, count#174, sum#175, count#176]
Results [15]: [i_item_id#26, sum#177, count#178, sum#179, count#180, sum#181, count#182, sum#183, count#184, sum#185, count#186, sum#187, count#188, sum#189, count#190]

(128) Exchange
Input [15]: [i_item_id#26, sum#177, count#178, sum#179, count#180, sum#181, count#182, sum#183, count#184, sum#185, count#186, sum#187, count#188, sum#189, count#190]
Arguments: hashpartitioning(i_item_id#26, 5), ENSURE_REQUIREMENTS, [plan_id=15]

(129) HashAggregate [codegen id : 32]
Input [15]: [i_item_id#26, sum#177, count#178, sum#179, count#180, sum#181, count#182, sum#183, count#184, sum#185, count#186, sum#187, count#188, sum#189, count#190]
Keys [1]: [i_item_id#26]
Functions [7]: [avg(agg1#27), avg(agg2#28), avg(agg3#29), avg(agg4#30), avg(agg5#31), avg(agg6#32), avg(agg7#33)]
Aggregate Attributes [7]: [avg(agg1#27)#191, avg(agg2#28)#192, avg(agg3#29)#193, avg(agg4#30)#194, avg(agg5#31)#195, avg(agg6#32)#196, avg(agg7#33)#197]
Results [11]: [i_item_id#26, null AS ca_country#198, null AS ca_state#199, null AS county#200, avg(agg1#27)#191 AS agg1#201, avg(agg2#28)#192 AS agg2#202, avg(agg3#29)#193 AS agg3#203, avg(agg4#30)#194 AS agg4#204, avg(agg5#31)#195 AS agg5#205, avg(agg6#32)#196 AS agg6#206, avg(agg7#33)#197 AS agg7#207]

(130) BatchScan spark_catalog.default.catalog_sales
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_bill_cdemo_sk IS NOT NULL, cs_bill_customer_sk IS NOT NULL, cs_sold_date_sk IS NOT NULL, cs_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(131) Filter [codegen id : 39]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Condition : (((isnotnull(cs_bill_cdemo_sk#3) AND isnotnull(cs_bill_customer_sk#2)) AND isnotnull(cs_sold_date_sk#1)) AND isnotnull(cs_item_sk#4))

(132) Project [codegen id : 39]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]
Input [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9]

(133) ReusedExchange [Reuses operator id: 7]
Output [2]: [cd_demo_sk#10, cd_dep_count#13]

(134) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_bill_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#10]
Join condition: None

(135) Project [codegen id : 39]
Output [9]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13]
Input [11]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_bill_cdemo_sk#3, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_demo_sk#10, cd_dep_count#13]

(136) ReusedExchange [Reuses operator id: 109]
Output [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(137) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_bill_customer_sk#2]
Right keys [1]: [c_customer_sk#14]
Join condition: None

(138) Project [codegen id : 39]
Output [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Input [13]: [cs_sold_date_sk#1, cs_bill_customer_sk#2, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(139) ReusedExchange [Reuses operator id: 19]
Output [1]: [cd_demo_sk#19]

(140) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [c_current_cdemo_sk#15]
Right keys [1]: [cd_demo_sk#19]
Join condition: None

(141) Project [codegen id : 39]
Output [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18]
Input [12]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18, cd_demo_sk#19]

(142) ReusedExchange [Reuses operator id: 118]
Output [1]: [ca_address_sk#20]

(143) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [c_current_addr_sk#16]
Right keys [1]: [ca_address_sk#20]
Join condition: None

(144) Project [codegen id : 39]
Output [9]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18]
Input [11]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18, ca_address_sk#20]

(145) ReusedExchange [Reuses operator id: 162]
Output [1]: [d_date_sk#24]

(146) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_sold_date_sk#1]
Right keys [1]: [d_date_sk#24]
Join condition: None

(147) Project [codegen id : 39]
Output [8]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18]
Input [10]: [cs_sold_date_sk#1, cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, d_date_sk#24]

(148) BatchScan spark_catalog.default.item
Output [1]: [i_item_sk#25]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(149) Filter [codegen id : 38]
Input [1]: [i_item_sk#25]
Condition : isnotnull(i_item_sk#25)

(150) Project [codegen id : 38]
Output [1]: [i_item_sk#25]
Input [1]: [i_item_sk#25]

(151) BroadcastExchange
Input [1]: [i_item_sk#25]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=16]

(152) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [i_item_sk#25]
Join condition: None

(153) Project [codegen id : 39]
Output [7]: [cast(cs_quantity#5 as decimal(12,2)) AS agg1#27, cast(cs_list_price#6 as decimal(12,2)) AS agg2#28, cast(cs_coupon_amt#8 as decimal(12,2)) AS agg3#29, cast(cs_sales_price#7 as decimal(12,2)) AS agg4#30, cast(cs_net_profit#9 as decimal(12,2)) AS agg5#31, cast(c_birth_year#18 as decimal(12,2)) AS agg6#32, cast(cd_dep_count#13 as decimal(12,2)) AS agg7#33]
Input [9]: [cs_item_sk#4, cs_quantity#5, cs_list_price#6, cs_sales_price#7, cs_coupon_amt#8, cs_net_profit#9, cd_dep_count#13, c_birth_year#18, i_item_sk#25]

(154) HashAggregate [codegen id : 39]
Input [7]: [agg1#27, agg2#28, agg3#29, agg4#30, agg5#31, agg6#32, agg7#33]
Keys: []
Functions [7]: [partial_avg(agg1#27), partial_avg(agg2#28), partial_avg(agg3#29), partial_avg(agg4#30), partial_avg(agg5#31), partial_avg(agg6#32), partial_avg(agg7#33)]
Aggregate Attributes [14]: [sum#208, count#209, sum#210, count#211, sum#212, count#213, sum#214, count#215, sum#216, count#217, sum#218, count#219, sum#220, count#221]
Results [14]: [sum#222, count#223, sum#224, count#225, sum#226, count#227, sum#228, count#229, sum#230, count#231, sum#232, count#233, sum#234, count#235]

(155) Exchange
Input [14]: [sum#222, count#223, sum#224, count#225, sum#226, count#227, sum#228, count#229, sum#230, count#231, sum#232, count#233, sum#234, count#235]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=17]

(156) HashAggregate [codegen id : 40]
Input [14]: [sum#222, count#223, sum#224, count#225, sum#226, count#227, sum#228, count#229, sum#230, count#231, sum#232, count#233, sum#234, count#235]
Keys: []
Functions [7]: [avg(agg1#27), avg(agg2#28), avg(agg3#29), avg(agg4#30), avg(agg5#31), avg(agg6#32), avg(agg7#33)]
Aggregate Attributes [7]: [avg(agg1#27)#236, avg(agg2#28)#237, avg(agg3#29)#238, avg(agg4#30)#239, avg(agg5#31)#240, avg(agg6#32)#241, avg(agg7#33)#242]
Results [11]: [null AS i_item_id#243, null AS ca_country#244, null AS ca_state#245, null AS county#246, avg(agg1#27)#236 AS agg1#247, avg(agg2#28)#237 AS agg2#248, avg(agg3#29)#238 AS agg3#249, avg(agg4#30)#239 AS agg4#250, avg(agg5#31)#240 AS agg5#251, avg(agg6#32)#241 AS agg6#252, avg(agg7#33)#242 AS agg7#253]

(157) Union

(158) TakeOrderedAndProject
Input [11]: [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, agg1#69, agg2#70, agg3#71, agg4#72, agg5#73, agg6#74, agg7#75]
Arguments: 100, [ca_country#23 ASC NULLS FIRST, ca_state#22 ASC NULLS FIRST, ca_county#21 ASC NULLS FIRST, i_item_id#26 ASC NULLS FIRST], [i_item_id#26, ca_country#23, ca_state#22, ca_county#21, agg1#69, agg2#70, agg3#71, agg4#72, agg5#73, agg6#74, agg7#75]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#1 IN dynamicpruning#254
BroadcastExchange (162)
+- * Project (161)
   +- * Filter (160)
      +- BatchScan spark_catalog.default.date_dim (159)


(159) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#24, d_year#255]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_year IS NOT NULL, d_year = 2001, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(160) Filter [codegen id : 1]
Input [2]: [d_date_sk#24, d_year#255]
Condition : ((isnotnull(d_year#255) AND (d_year#255 = 2001)) AND isnotnull(d_date_sk#24))

(161) Project [codegen id : 1]
Output [1]: [d_date_sk#24]
Input [2]: [d_date_sk#24, d_year#255]

(162) BroadcastExchange
Input [1]: [d_date_sk#24]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=18]

Subquery:2 Hosting operator id = 40 Hosting Expression = cs_sold_date_sk#1 IN dynamicpruning#254

Subquery:3 Hosting operator id = 70 Hosting Expression = cs_sold_date_sk#1 IN dynamicpruning#254

Subquery:4 Hosting operator id = 100 Hosting Expression = cs_sold_date_sk#1 IN dynamicpruning#254

Subquery:5 Hosting operator id = 130 Hosting Expression = cs_sold_date_sk#1 IN dynamicpruning#254


