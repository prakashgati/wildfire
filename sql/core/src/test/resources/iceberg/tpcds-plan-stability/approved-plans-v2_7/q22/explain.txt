== Physical Plan ==
TakeOrderedAndProject (22)
+- * HashAggregate (21)
   +- Exchange (20)
      +- * HashAggregate (19)
         +- * Expand (18)
            +- * Project (17)
               +- * BroadcastNestedLoopJoin Inner BuildRight (16)
                  :- * Project (12)
                  :  +- * BroadcastHashJoin Inner BuildRight (11)
                  :     :- * Project (6)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (5)
                  :     :     :- * Project (3)
                  :     :     :  +- * Filter (2)
                  :     :     :     +- BatchScan spark_catalog.default.inventory (1)
                  :     :     +- ReusedExchange (4)
                  :     +- BroadcastExchange (10)
                  :        +- * Project (9)
                  :           +- * Filter (8)
                  :              +- BatchScan spark_catalog.default.item (7)
                  +- BroadcastExchange (15)
                     +- * Project (14)
                        +- BatchScan spark_catalog.default.warehouse (13)


(1) BatchScan spark_catalog.default.inventory
Output [3]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3]
spark_catalog.default.inventory [scan class = SparkBatchQueryScan] [filters=inv_date_sk IS NOT NULL, inv_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 4]
Input [3]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3]
Condition : (isnotnull(inv_date_sk#1) AND isnotnull(inv_item_sk#2))

(3) Project [codegen id : 4]
Output [3]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3]
Input [3]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3]

(4) ReusedExchange [Reuses operator id: 26]
Output [1]: [d_date_sk#4]

(5) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#4]
Join condition: None

(6) Project [codegen id : 4]
Output [2]: [inv_item_sk#2, inv_quantity_on_hand#3]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_quantity_on_hand#3, d_date_sk#4]

(7) BatchScan spark_catalog.default.item
Output [5]: [i_item_sk#5, i_brand#6, i_class#7, i_category#8, i_product_name#9]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(8) Filter [codegen id : 2]
Input [5]: [i_item_sk#5, i_brand#6, i_class#7, i_category#8, i_product_name#9]
Condition : isnotnull(i_item_sk#5)

(9) Project [codegen id : 2]
Output [5]: [i_item_sk#5, i_brand#6, i_class#7, i_category#8, i_product_name#9]
Input [5]: [i_item_sk#5, i_brand#6, i_class#7, i_category#8, i_product_name#9]

(10) BroadcastExchange
Input [5]: [i_item_sk#5, i_brand#6, i_class#7, i_category#8, i_product_name#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(11) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#5]
Join condition: None

(12) Project [codegen id : 4]
Output [5]: [inv_quantity_on_hand#3, i_brand#6, i_class#7, i_category#8, i_product_name#9]
Input [7]: [inv_item_sk#2, inv_quantity_on_hand#3, i_item_sk#5, i_brand#6, i_class#7, i_category#8, i_product_name#9]

(13) BatchScan spark_catalog.default.warehouse
Output: []
spark_catalog.default.warehouse [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(14) Project [codegen id : 3]
Output: []
Input: []

(15) BroadcastExchange
Input: []
Arguments: IdentityBroadcastMode, [plan_id=2]

(16) BroadcastNestedLoopJoin [codegen id : 4]
Join condition: None

(17) Project [codegen id : 4]
Output [5]: [inv_quantity_on_hand#3, i_product_name#9, i_brand#6, i_class#7, i_category#8]
Input [5]: [inv_quantity_on_hand#3, i_brand#6, i_class#7, i_category#8, i_product_name#9]

(18) Expand [codegen id : 4]
Input [5]: [inv_quantity_on_hand#3, i_product_name#9, i_brand#6, i_class#7, i_category#8]
Arguments: [[inv_quantity_on_hand#3, i_product_name#9, i_brand#6, i_class#7, i_category#8, 0], [inv_quantity_on_hand#3, i_product_name#9, i_brand#6, i_class#7, null, 1], [inv_quantity_on_hand#3, i_product_name#9, i_brand#6, null, null, 3], [inv_quantity_on_hand#3, i_product_name#9, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14]

(19) HashAggregate [codegen id : 4]
Input [6]: [inv_quantity_on_hand#3, i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14]
Keys [5]: [i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14]
Functions [1]: [partial_avg(inv_quantity_on_hand#3)]
Aggregate Attributes [2]: [sum#15, count#16]
Results [7]: [i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14, sum#17, count#18]

(20) Exchange
Input [7]: [i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14, sum#17, count#18]
Arguments: hashpartitioning(i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(21) HashAggregate [codegen id : 5]
Input [7]: [i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14, sum#17, count#18]
Keys [5]: [i_product_name#10, i_brand#11, i_class#12, i_category#13, spark_grouping_id#14]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#19]
Results [5]: [i_product_name#10, i_brand#11, i_class#12, i_category#13, avg(inv_quantity_on_hand#3)#19 AS qoh#20]

(22) TakeOrderedAndProject
Input [5]: [i_product_name#10, i_brand#11, i_class#12, i_category#13, qoh#20]
Arguments: 100, [qoh#20 ASC NULLS FIRST, i_product_name#10 ASC NULLS FIRST, i_brand#11 ASC NULLS FIRST, i_class#12 ASC NULLS FIRST, i_category#13 ASC NULLS FIRST], [i_product_name#10, i_brand#11, i_class#12, i_category#13, qoh#20]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = inv_date_sk#1 IN dynamicpruning#21
BroadcastExchange (26)
+- * Project (25)
   +- * Filter (24)
      +- BatchScan spark_catalog.default.date_dim (23)


(23) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#4, d_month_seq#22]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_month_seq IS NOT NULL, d_month_seq >= 1200, d_month_seq <= 1211, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(24) Filter [codegen id : 1]
Input [2]: [d_date_sk#4, d_month_seq#22]
Condition : (((isnotnull(d_month_seq#22) AND (d_month_seq#22 >= 1200)) AND (d_month_seq#22 <= 1211)) AND isnotnull(d_date_sk#4))

(25) Project [codegen id : 1]
Output [1]: [d_date_sk#4]
Input [2]: [d_date_sk#4, d_month_seq#22]

(26) BroadcastExchange
Input [1]: [d_date_sk#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]


