== Physical Plan ==
TakeOrderedAndProject (22)
+- * HashAggregate (21)
   +- Exchange (20)
      +- * HashAggregate (19)
         +- * Project (18)
            +- * BroadcastHashJoin Inner BuildRight (17)
               :- * Project (12)
               :  +- * BroadcastHashJoin Inner BuildRight (11)
               :     :- * Project (9)
               :     :  +- * BroadcastHashJoin Inner BuildRight (8)
               :     :     :- * Project (3)
               :     :     :  +- * Filter (2)
               :     :     :     +- BatchScan spark_catalog.default.item (1)
               :     :     +- BroadcastExchange (7)
               :     :        +- * Project (6)
               :     :           +- * Filter (5)
               :     :              +- BatchScan spark_catalog.default.inventory (4)
               :     +- ReusedExchange (10)
               +- BroadcastExchange (16)
                  +- * Project (15)
                     +- * Filter (14)
                        +- BatchScan spark_catalog.default.store_sales (13)


(1) BatchScan spark_catalog.default.item
Output [5]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_manufact_id#5]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_current_price IS NOT NULL, i_current_price >= 62.00, i_current_price <= 92.00, i_manufact_id IN (129, 270, 821, 423), i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 4]
Input [5]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_manufact_id#5]
Condition : ((((isnotnull(i_current_price#4) AND (i_current_price#4 >= 62.00)) AND (i_current_price#4 <= 92.00)) AND i_manufact_id#5 IN (129,270,821,423)) AND isnotnull(i_item_sk#1))

(3) Project [codegen id : 4]
Output [4]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4]
Input [5]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, i_manufact_id#5]

(4) BatchScan spark_catalog.default.inventory
Output [3]: [inv_date_sk#6, inv_item_sk#7, inv_quantity_on_hand#8]
spark_catalog.default.inventory [scan class = SparkBatchQueryScan] [filters=inv_quantity_on_hand IS NOT NULL, inv_quantity_on_hand >= 100, inv_quantity_on_hand <= 500, inv_item_sk IS NOT NULL, inv_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [3]: [inv_date_sk#6, inv_item_sk#7, inv_quantity_on_hand#8]
Condition : ((((isnotnull(inv_quantity_on_hand#8) AND (inv_quantity_on_hand#8 >= 100)) AND (inv_quantity_on_hand#8 <= 500)) AND isnotnull(inv_item_sk#7)) AND isnotnull(inv_date_sk#6))

(6) Project [codegen id : 1]
Output [2]: [inv_date_sk#6, inv_item_sk#7]
Input [3]: [inv_date_sk#6, inv_item_sk#7, inv_quantity_on_hand#8]

(7) BroadcastExchange
Input [2]: [inv_date_sk#6, inv_item_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_sk#1]
Right keys [1]: [inv_item_sk#7]
Join condition: None

(9) Project [codegen id : 4]
Output [5]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, inv_date_sk#6]
Input [6]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, inv_date_sk#6, inv_item_sk#7]

(10) ReusedExchange [Reuses operator id: 26]
Output [1]: [d_date_sk#9]

(11) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#6]
Right keys [1]: [d_date_sk#9]
Join condition: None

(12) Project [codegen id : 4]
Output [4]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4]
Input [6]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, inv_date_sk#6, d_date_sk#9]

(13) BatchScan spark_catalog.default.store_sales
Output [1]: [ss_item_sk#10]
spark_catalog.default.store_sales [scan class = SparkBatchQueryScan] [filters=ss_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(14) Filter [codegen id : 3]
Input [1]: [ss_item_sk#10]
Condition : isnotnull(ss_item_sk#10)

(15) Project [codegen id : 3]
Output [1]: [ss_item_sk#10]
Input [1]: [ss_item_sk#10]

(16) BroadcastExchange
Input [1]: [ss_item_sk#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(17) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_sk#1]
Right keys [1]: [ss_item_sk#10]
Join condition: None

(18) Project [codegen id : 4]
Output [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]
Input [5]: [i_item_sk#1, i_item_id#2, i_item_desc#3, i_current_price#4, ss_item_sk#10]

(19) HashAggregate [codegen id : 4]
Input [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]
Keys [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]
Functions: []
Aggregate Attributes: []
Results [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]

(20) Exchange
Input [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]
Arguments: hashpartitioning(i_item_id#2, i_item_desc#3, i_current_price#4, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(21) HashAggregate [codegen id : 5]
Input [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]
Keys [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]
Functions: []
Aggregate Attributes: []
Results [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]

(22) TakeOrderedAndProject
Input [3]: [i_item_id#2, i_item_desc#3, i_current_price#4]
Arguments: 100, [i_item_id#2 ASC NULLS FIRST], [i_item_id#2, i_item_desc#3, i_current_price#4]

===== Subqueries =====

Subquery:1 Hosting operator id = 4 Hosting Expression = inv_date_sk#6 IN dynamicpruning#11
BroadcastExchange (26)
+- * Project (25)
   +- * Filter (24)
      +- BatchScan spark_catalog.default.date_dim (23)


(23) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#9, d_date#12]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_date IS NOT NULL, d_date >= 11102, d_date <= 11162, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(24) Filter [codegen id : 1]
Input [2]: [d_date_sk#9, d_date#12]
Condition : (((isnotnull(d_date#12) AND (d_date#12 >= 2000-05-25)) AND (d_date#12 <= 2000-07-24)) AND isnotnull(d_date_sk#9))

(25) Project [codegen id : 1]
Output [1]: [d_date_sk#9]
Input [2]: [d_date_sk#9, d_date#12]

(26) BroadcastExchange
Input [1]: [d_date_sk#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]


