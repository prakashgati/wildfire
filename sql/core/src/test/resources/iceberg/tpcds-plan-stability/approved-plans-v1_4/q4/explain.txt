== Physical Plan ==
TakeOrderedAndProject (108)
+- * Project (107)
   +- * BroadcastHashJoin Inner BuildRight (106)
      :- * Project (89)
      :  +- * BroadcastHashJoin Inner BuildRight (88)
      :     :- * Project (70)
      :     :  +- * BroadcastHashJoin Inner BuildRight (69)
      :     :     :- * Project (52)
      :     :     :  +- * BroadcastHashJoin Inner BuildRight (51)
      :     :     :     :- * BroadcastHashJoin Inner BuildRight (33)
      :     :     :     :  :- * Filter (16)
      :     :     :     :  :  +- * HashAggregate (15)
      :     :     :     :  :     +- Exchange (14)
      :     :     :     :  :        +- * HashAggregate (13)
      :     :     :     :  :           +- * Project (12)
      :     :     :     :  :              +- * BroadcastHashJoin Inner BuildRight (11)
      :     :     :     :  :                 :- * Project (9)
      :     :     :     :  :                 :  +- * BroadcastHashJoin Inner BuildRight (8)
      :     :     :     :  :                 :     :- * Project (3)
      :     :     :     :  :                 :     :  +- * Filter (2)
      :     :     :     :  :                 :     :     +- BatchScan spark_catalog.default.customer (1)
      :     :     :     :  :                 :     +- BroadcastExchange (7)
      :     :     :     :  :                 :        +- * Project (6)
      :     :     :     :  :                 :           +- * Filter (5)
      :     :     :     :  :                 :              +- BatchScan spark_catalog.default.store_sales (4)
      :     :     :     :  :                 +- ReusedExchange (10)
      :     :     :     :  +- BroadcastExchange (32)
      :     :     :     :     +- * HashAggregate (31)
      :     :     :     :        +- Exchange (30)
      :     :     :     :           +- * HashAggregate (29)
      :     :     :     :              +- * Project (28)
      :     :     :     :                 +- * BroadcastHashJoin Inner BuildRight (27)
      :     :     :     :                    :- * Project (25)
      :     :     :     :                    :  +- * BroadcastHashJoin Inner BuildRight (24)
      :     :     :     :                    :     :- * Project (19)
      :     :     :     :                    :     :  +- * Filter (18)
      :     :     :     :                    :     :     +- BatchScan spark_catalog.default.customer (17)
      :     :     :     :                    :     +- BroadcastExchange (23)
      :     :     :     :                    :        +- * Project (22)
      :     :     :     :                    :           +- * Filter (21)
      :     :     :     :                    :              +- BatchScan spark_catalog.default.store_sales (20)
      :     :     :     :                    +- ReusedExchange (26)
      :     :     :     +- BroadcastExchange (50)
      :     :     :        +- * Filter (49)
      :     :     :           +- * HashAggregate (48)
      :     :     :              +- Exchange (47)
      :     :     :                 +- * HashAggregate (46)
      :     :     :                    +- * Project (45)
      :     :     :                       +- * BroadcastHashJoin Inner BuildRight (44)
      :     :     :                          :- * Project (42)
      :     :     :                          :  +- * BroadcastHashJoin Inner BuildRight (41)
      :     :     :                          :     :- * Project (36)
      :     :     :                          :     :  +- * Filter (35)
      :     :     :                          :     :     +- BatchScan spark_catalog.default.customer (34)
      :     :     :                          :     +- BroadcastExchange (40)
      :     :     :                          :        +- * Project (39)
      :     :     :                          :           +- * Filter (38)
      :     :     :                          :              +- BatchScan spark_catalog.default.catalog_sales (37)
      :     :     :                          +- ReusedExchange (43)
      :     :     +- BroadcastExchange (68)
      :     :        +- * HashAggregate (67)
      :     :           +- Exchange (66)
      :     :              +- * HashAggregate (65)
      :     :                 +- * Project (64)
      :     :                    +- * BroadcastHashJoin Inner BuildRight (63)
      :     :                       :- * Project (61)
      :     :                       :  +- * BroadcastHashJoin Inner BuildRight (60)
      :     :                       :     :- * Project (55)
      :     :                       :     :  +- * Filter (54)
      :     :                       :     :     +- BatchScan spark_catalog.default.customer (53)
      :     :                       :     +- BroadcastExchange (59)
      :     :                       :        +- * Project (58)
      :     :                       :           +- * Filter (57)
      :     :                       :              +- BatchScan spark_catalog.default.catalog_sales (56)
      :     :                       +- ReusedExchange (62)
      :     +- BroadcastExchange (87)
      :        +- * Filter (86)
      :           +- * HashAggregate (85)
      :              +- Exchange (84)
      :                 +- * HashAggregate (83)
      :                    +- * Project (82)
      :                       +- * BroadcastHashJoin Inner BuildRight (81)
      :                          :- * Project (79)
      :                          :  +- * BroadcastHashJoin Inner BuildRight (78)
      :                          :     :- * Project (73)
      :                          :     :  +- * Filter (72)
      :                          :     :     +- BatchScan spark_catalog.default.customer (71)
      :                          :     +- BroadcastExchange (77)
      :                          :        +- * Project (76)
      :                          :           +- * Filter (75)
      :                          :              +- BatchScan spark_catalog.default.web_sales (74)
      :                          +- ReusedExchange (80)
      +- BroadcastExchange (105)
         +- * HashAggregate (104)
            +- Exchange (103)
               +- * HashAggregate (102)
                  +- * Project (101)
                     +- * BroadcastHashJoin Inner BuildRight (100)
                        :- * Project (98)
                        :  +- * BroadcastHashJoin Inner BuildRight (97)
                        :     :- * Project (92)
                        :     :  +- * Filter (91)
                        :     :     +- BatchScan spark_catalog.default.customer (90)
                        :     +- BroadcastExchange (96)
                        :        +- * Project (95)
                        :           +- * Filter (94)
                        :              +- BatchScan spark_catalog.default.web_sales (93)
                        +- ReusedExchange (99)


(1) BatchScan spark_catalog.default.customer
Output [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_customer_sk IS NOT NULL, c_customer_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 3]
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(c_customer_id#2))

(3) Project [codegen id : 3]
Output [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]

(4) BatchScan spark_catalog.default.store_sales
Output [6]: [ss_sold_date_sk#9, ss_customer_sk#10, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14]
spark_catalog.default.store_sales [scan class = SparkBatchQueryScan] [filters=ss_customer_sk IS NOT NULL, ss_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [6]: [ss_sold_date_sk#9, ss_customer_sk#10, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14]
Condition : (isnotnull(ss_customer_sk#10) AND isnotnull(ss_sold_date_sk#9))

(6) Project [codegen id : 1]
Output [6]: [ss_sold_date_sk#9, ss_customer_sk#10, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14]
Input [6]: [ss_sold_date_sk#9, ss_customer_sk#10, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14]

(7) BroadcastExchange
Input [6]: [ss_sold_date_sk#9, ss_customer_sk#10, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ss_customer_sk#10]
Join condition: None

(9) Project [codegen id : 3]
Output [12]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, ss_sold_date_sk#9, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14]
Input [14]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, ss_sold_date_sk#9, ss_customer_sk#10, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14]

(10) ReusedExchange [Reuses operator id: 112]
Output [2]: [d_date_sk#15, d_year#16]

(11) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#9]
Right keys [1]: [d_date_sk#15]
Join condition: None

(12) Project [codegen id : 3]
Output [12]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14, d_year#16]
Input [14]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, ss_sold_date_sk#9, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14, d_date_sk#15, d_year#16]

(13) HashAggregate [codegen id : 3]
Input [12]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, ss_ext_discount_amt#11, ss_ext_sales_price#12, ss_ext_wholesale_cost#13, ss_ext_list_price#14, d_year#16]
Keys [8]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, d_year#16]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#14 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#13 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#11 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#12 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [2]: [sum#17, isEmpty#18]
Results [10]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, d_year#16, sum#19, isEmpty#20]

(14) Exchange
Input [10]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, d_year#16, sum#19, isEmpty#20]
Arguments: hashpartitioning(c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, d_year#16, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(15) HashAggregate [codegen id : 24]
Input [10]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, d_year#16, sum#19, isEmpty#20]
Keys [8]: [c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8, d_year#16]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#14 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#13 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#11 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#12 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#14 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#13 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#11 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#12 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#21]
Results [2]: [c_customer_id#2 AS customer_id#22, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#14 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#13 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#11 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#12 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#21 AS year_total#23]

(16) Filter [codegen id : 24]
Input [2]: [customer_id#22, year_total#23]
Condition : (isnotnull(year_total#23) AND (year_total#23 > 0.000000))

(17) BatchScan spark_catalog.default.customer
Output [8]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_customer_sk IS NOT NULL, c_customer_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(18) Filter [codegen id : 6]
Input [8]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31]
Condition : (isnotnull(c_customer_sk#24) AND isnotnull(c_customer_id#25))

(19) Project [codegen id : 6]
Output [8]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31]
Input [8]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31]

(20) BatchScan spark_catalog.default.store_sales
Output [6]: [ss_sold_date_sk#32, ss_customer_sk#33, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37]
spark_catalog.default.store_sales [scan class = SparkBatchQueryScan] [filters=ss_customer_sk IS NOT NULL, ss_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(21) Filter [codegen id : 4]
Input [6]: [ss_sold_date_sk#32, ss_customer_sk#33, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37]
Condition : (isnotnull(ss_customer_sk#33) AND isnotnull(ss_sold_date_sk#32))

(22) Project [codegen id : 4]
Output [6]: [ss_sold_date_sk#32, ss_customer_sk#33, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37]
Input [6]: [ss_sold_date_sk#32, ss_customer_sk#33, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37]

(23) BroadcastExchange
Input [6]: [ss_sold_date_sk#32, ss_customer_sk#33, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=3]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [c_customer_sk#24]
Right keys [1]: [ss_customer_sk#33]
Join condition: None

(25) Project [codegen id : 6]
Output [12]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, ss_sold_date_sk#32, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37]
Input [14]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, ss_sold_date_sk#32, ss_customer_sk#33, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37]

(26) ReusedExchange [Reuses operator id: 116]
Output [2]: [d_date_sk#38, d_year#39]

(27) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#32]
Right keys [1]: [d_date_sk#38]
Join condition: None

(28) Project [codegen id : 6]
Output [12]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37, d_year#39]
Input [14]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, ss_sold_date_sk#32, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37, d_date_sk#38, d_year#39]

(29) HashAggregate [codegen id : 6]
Input [12]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, ss_ext_discount_amt#34, ss_ext_sales_price#35, ss_ext_wholesale_cost#36, ss_ext_list_price#37, d_year#39]
Keys [8]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, d_year#39]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#37 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#36 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#34 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#35 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [2]: [sum#40, isEmpty#41]
Results [10]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, d_year#39, sum#42, isEmpty#43]

(30) Exchange
Input [10]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, d_year#39, sum#42, isEmpty#43]
Arguments: hashpartitioning(c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, d_year#39, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(31) HashAggregate [codegen id : 7]
Input [10]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, d_year#39, sum#42, isEmpty#43]
Keys [8]: [c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31, d_year#39]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#37 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#36 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#34 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#35 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#37 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#36 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#34 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#35 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#21]
Results [8]: [c_customer_id#25 AS customer_id#44, c_first_name#26 AS customer_first_name#45, c_last_name#27 AS customer_last_name#46, c_preferred_cust_flag#28 AS customer_preferred_cust_flag#47, c_birth_country#29 AS customer_birth_country#48, c_login#30 AS customer_login#49, c_email_address#31 AS customer_email_address#50, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#37 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#36 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#34 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#35 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#21 AS year_total#51]

(32) BroadcastExchange
Input [8]: [customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#51]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=5]

(33) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [customer_id#22]
Right keys [1]: [customer_id#44]
Join condition: None

(34) BatchScan spark_catalog.default.customer
Output [8]: [c_customer_sk#52, c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_customer_sk IS NOT NULL, c_customer_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(35) Filter [codegen id : 10]
Input [8]: [c_customer_sk#52, c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59]
Condition : (isnotnull(c_customer_sk#52) AND isnotnull(c_customer_id#53))

(36) Project [codegen id : 10]
Output [8]: [c_customer_sk#52, c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59]
Input [8]: [c_customer_sk#52, c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59]

(37) BatchScan spark_catalog.default.catalog_sales
Output [6]: [cs_sold_date_sk#60, cs_bill_customer_sk#61, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_bill_customer_sk IS NOT NULL, cs_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(38) Filter [codegen id : 8]
Input [6]: [cs_sold_date_sk#60, cs_bill_customer_sk#61, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65]
Condition : (isnotnull(cs_bill_customer_sk#61) AND isnotnull(cs_sold_date_sk#60))

(39) Project [codegen id : 8]
Output [6]: [cs_sold_date_sk#60, cs_bill_customer_sk#61, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65]
Input [6]: [cs_sold_date_sk#60, cs_bill_customer_sk#61, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65]

(40) BroadcastExchange
Input [6]: [cs_sold_date_sk#60, cs_bill_customer_sk#61, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=6]

(41) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_customer_sk#52]
Right keys [1]: [cs_bill_customer_sk#61]
Join condition: None

(42) Project [codegen id : 10]
Output [12]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, cs_sold_date_sk#60, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65]
Input [14]: [c_customer_sk#52, c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, cs_sold_date_sk#60, cs_bill_customer_sk#61, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65]

(43) ReusedExchange [Reuses operator id: 112]
Output [2]: [d_date_sk#66, d_year#67]

(44) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_sold_date_sk#60]
Right keys [1]: [d_date_sk#66]
Join condition: None

(45) Project [codegen id : 10]
Output [12]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65, d_year#67]
Input [14]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, cs_sold_date_sk#60, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65, d_date_sk#66, d_year#67]

(46) HashAggregate [codegen id : 10]
Input [12]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, cs_ext_discount_amt#62, cs_ext_sales_price#63, cs_ext_wholesale_cost#64, cs_ext_list_price#65, d_year#67]
Keys [8]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, d_year#67]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#65 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#64 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#62 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#63 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [2]: [sum#68, isEmpty#69]
Results [10]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, d_year#67, sum#70, isEmpty#71]

(47) Exchange
Input [10]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, d_year#67, sum#70, isEmpty#71]
Arguments: hashpartitioning(c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, d_year#67, 5), ENSURE_REQUIREMENTS, [plan_id=7]

(48) HashAggregate [codegen id : 11]
Input [10]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, d_year#67, sum#70, isEmpty#71]
Keys [8]: [c_customer_id#53, c_first_name#54, c_last_name#55, c_preferred_cust_flag#56, c_birth_country#57, c_login#58, c_email_address#59, d_year#67]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#65 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#64 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#62 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#63 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#65 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#64 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#62 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#63 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#72]
Results [2]: [c_customer_id#53 AS customer_id#73, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#65 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#64 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#62 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#63 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#72 AS year_total#74]

(49) Filter [codegen id : 11]
Input [2]: [customer_id#73, year_total#74]
Condition : (isnotnull(year_total#74) AND (year_total#74 > 0.000000))

(50) BroadcastExchange
Input [2]: [customer_id#73, year_total#74]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=8]

(51) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [customer_id#22]
Right keys [1]: [customer_id#73]
Join condition: None

(52) Project [codegen id : 24]
Output [11]: [customer_id#22, year_total#23, customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#51, year_total#74]
Input [12]: [customer_id#22, year_total#23, customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#51, customer_id#73, year_total#74]

(53) BatchScan spark_catalog.default.customer
Output [8]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_customer_sk IS NOT NULL, c_customer_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(54) Filter [codegen id : 14]
Input [8]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82]
Condition : (isnotnull(c_customer_sk#75) AND isnotnull(c_customer_id#76))

(55) Project [codegen id : 14]
Output [8]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82]
Input [8]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82]

(56) BatchScan spark_catalog.default.catalog_sales
Output [6]: [cs_sold_date_sk#83, cs_bill_customer_sk#84, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_bill_customer_sk IS NOT NULL, cs_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(57) Filter [codegen id : 12]
Input [6]: [cs_sold_date_sk#83, cs_bill_customer_sk#84, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88]
Condition : (isnotnull(cs_bill_customer_sk#84) AND isnotnull(cs_sold_date_sk#83))

(58) Project [codegen id : 12]
Output [6]: [cs_sold_date_sk#83, cs_bill_customer_sk#84, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88]
Input [6]: [cs_sold_date_sk#83, cs_bill_customer_sk#84, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88]

(59) BroadcastExchange
Input [6]: [cs_sold_date_sk#83, cs_bill_customer_sk#84, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=9]

(60) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [c_customer_sk#75]
Right keys [1]: [cs_bill_customer_sk#84]
Join condition: None

(61) Project [codegen id : 14]
Output [12]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, cs_sold_date_sk#83, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88]
Input [14]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, cs_sold_date_sk#83, cs_bill_customer_sk#84, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88]

(62) ReusedExchange [Reuses operator id: 116]
Output [2]: [d_date_sk#89, d_year#90]

(63) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [cs_sold_date_sk#83]
Right keys [1]: [d_date_sk#89]
Join condition: None

(64) Project [codegen id : 14]
Output [12]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88, d_year#90]
Input [14]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, cs_sold_date_sk#83, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88, d_date_sk#89, d_year#90]

(65) HashAggregate [codegen id : 14]
Input [12]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, cs_ext_discount_amt#85, cs_ext_sales_price#86, cs_ext_wholesale_cost#87, cs_ext_list_price#88, d_year#90]
Keys [8]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, d_year#90]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#88 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#87 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#85 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#86 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [2]: [sum#91, isEmpty#92]
Results [10]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, d_year#90, sum#93, isEmpty#94]

(66) Exchange
Input [10]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, d_year#90, sum#93, isEmpty#94]
Arguments: hashpartitioning(c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, d_year#90, 5), ENSURE_REQUIREMENTS, [plan_id=10]

(67) HashAggregate [codegen id : 15]
Input [10]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, d_year#90, sum#93, isEmpty#94]
Keys [8]: [c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82, d_year#90]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#88 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#87 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#85 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#86 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#88 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#87 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#85 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#86 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#72]
Results [2]: [c_customer_id#76 AS customer_id#95, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#88 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#87 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#85 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#86 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#72 AS year_total#96]

(68) BroadcastExchange
Input [2]: [customer_id#95, year_total#96]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=11]

(69) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [customer_id#22]
Right keys [1]: [customer_id#95]
Join condition: (CASE WHEN (year_total#74 > 0.000000) THEN CheckOverflow((promote_precision(year_total#96) / promote_precision(year_total#74)), DecimalType(38,14)) END > CASE WHEN (year_total#23 > 0.000000) THEN CheckOverflow((promote_precision(year_total#51) / promote_precision(year_total#23)), DecimalType(38,14)) END)

(70) Project [codegen id : 24]
Output [10]: [customer_id#22, customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#74, year_total#96]
Input [13]: [customer_id#22, year_total#23, customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#51, year_total#74, customer_id#95, year_total#96]

(71) BatchScan spark_catalog.default.customer
Output [8]: [c_customer_sk#97, c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_customer_sk IS NOT NULL, c_customer_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(72) Filter [codegen id : 18]
Input [8]: [c_customer_sk#97, c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104]
Condition : (isnotnull(c_customer_sk#97) AND isnotnull(c_customer_id#98))

(73) Project [codegen id : 18]
Output [8]: [c_customer_sk#97, c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104]
Input [8]: [c_customer_sk#97, c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104]

(74) BatchScan spark_catalog.default.web_sales
Output [6]: [ws_sold_date_sk#105, ws_bill_customer_sk#106, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110]
spark_catalog.default.web_sales [scan class = SparkBatchQueryScan] [filters=ws_bill_customer_sk IS NOT NULL, ws_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(75) Filter [codegen id : 16]
Input [6]: [ws_sold_date_sk#105, ws_bill_customer_sk#106, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110]
Condition : (isnotnull(ws_bill_customer_sk#106) AND isnotnull(ws_sold_date_sk#105))

(76) Project [codegen id : 16]
Output [6]: [ws_sold_date_sk#105, ws_bill_customer_sk#106, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110]
Input [6]: [ws_sold_date_sk#105, ws_bill_customer_sk#106, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110]

(77) BroadcastExchange
Input [6]: [ws_sold_date_sk#105, ws_bill_customer_sk#106, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=12]

(78) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [c_customer_sk#97]
Right keys [1]: [ws_bill_customer_sk#106]
Join condition: None

(79) Project [codegen id : 18]
Output [12]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, ws_sold_date_sk#105, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110]
Input [14]: [c_customer_sk#97, c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, ws_sold_date_sk#105, ws_bill_customer_sk#106, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110]

(80) ReusedExchange [Reuses operator id: 112]
Output [2]: [d_date_sk#111, d_year#112]

(81) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_sold_date_sk#105]
Right keys [1]: [d_date_sk#111]
Join condition: None

(82) Project [codegen id : 18]
Output [12]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110, d_year#112]
Input [14]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, ws_sold_date_sk#105, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110, d_date_sk#111, d_year#112]

(83) HashAggregate [codegen id : 18]
Input [12]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, ws_ext_discount_amt#107, ws_ext_sales_price#108, ws_ext_wholesale_cost#109, ws_ext_list_price#110, d_year#112]
Keys [8]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, d_year#112]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#110 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#109 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#107 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#108 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [2]: [sum#113, isEmpty#114]
Results [10]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, d_year#112, sum#115, isEmpty#116]

(84) Exchange
Input [10]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, d_year#112, sum#115, isEmpty#116]
Arguments: hashpartitioning(c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, d_year#112, 5), ENSURE_REQUIREMENTS, [plan_id=13]

(85) HashAggregate [codegen id : 19]
Input [10]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, d_year#112, sum#115, isEmpty#116]
Keys [8]: [c_customer_id#98, c_first_name#99, c_last_name#100, c_preferred_cust_flag#101, c_birth_country#102, c_login#103, c_email_address#104, d_year#112]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#110 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#109 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#107 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#108 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#110 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#109 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#107 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#108 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#117]
Results [2]: [c_customer_id#98 AS customer_id#118, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#110 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#109 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#107 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#108 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#117 AS year_total#119]

(86) Filter [codegen id : 19]
Input [2]: [customer_id#118, year_total#119]
Condition : (isnotnull(year_total#119) AND (year_total#119 > 0.000000))

(87) BroadcastExchange
Input [2]: [customer_id#118, year_total#119]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=14]

(88) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [customer_id#22]
Right keys [1]: [customer_id#118]
Join condition: None

(89) Project [codegen id : 24]
Output [11]: [customer_id#22, customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#74, year_total#96, year_total#119]
Input [12]: [customer_id#22, customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#74, year_total#96, customer_id#118, year_total#119]

(90) BatchScan spark_catalog.default.customer
Output [8]: [c_customer_sk#120, c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_customer_sk IS NOT NULL, c_customer_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(91) Filter [codegen id : 22]
Input [8]: [c_customer_sk#120, c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127]
Condition : (isnotnull(c_customer_sk#120) AND isnotnull(c_customer_id#121))

(92) Project [codegen id : 22]
Output [8]: [c_customer_sk#120, c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127]
Input [8]: [c_customer_sk#120, c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127]

(93) BatchScan spark_catalog.default.web_sales
Output [6]: [ws_sold_date_sk#128, ws_bill_customer_sk#129, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133]
spark_catalog.default.web_sales [scan class = SparkBatchQueryScan] [filters=ws_bill_customer_sk IS NOT NULL, ws_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(94) Filter [codegen id : 20]
Input [6]: [ws_sold_date_sk#128, ws_bill_customer_sk#129, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133]
Condition : (isnotnull(ws_bill_customer_sk#129) AND isnotnull(ws_sold_date_sk#128))

(95) Project [codegen id : 20]
Output [6]: [ws_sold_date_sk#128, ws_bill_customer_sk#129, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133]
Input [6]: [ws_sold_date_sk#128, ws_bill_customer_sk#129, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133]

(96) BroadcastExchange
Input [6]: [ws_sold_date_sk#128, ws_bill_customer_sk#129, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=15]

(97) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [c_customer_sk#120]
Right keys [1]: [ws_bill_customer_sk#129]
Join condition: None

(98) Project [codegen id : 22]
Output [12]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, ws_sold_date_sk#128, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133]
Input [14]: [c_customer_sk#120, c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, ws_sold_date_sk#128, ws_bill_customer_sk#129, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133]

(99) ReusedExchange [Reuses operator id: 116]
Output [2]: [d_date_sk#134, d_year#135]

(100) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [ws_sold_date_sk#128]
Right keys [1]: [d_date_sk#134]
Join condition: None

(101) Project [codegen id : 22]
Output [12]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133, d_year#135]
Input [14]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, ws_sold_date_sk#128, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133, d_date_sk#134, d_year#135]

(102) HashAggregate [codegen id : 22]
Input [12]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, ws_ext_discount_amt#130, ws_ext_sales_price#131, ws_ext_wholesale_cost#132, ws_ext_list_price#133, d_year#135]
Keys [8]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, d_year#135]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#133 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#132 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#130 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#131 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [2]: [sum#136, isEmpty#137]
Results [10]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, d_year#135, sum#138, isEmpty#139]

(103) Exchange
Input [10]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, d_year#135, sum#138, isEmpty#139]
Arguments: hashpartitioning(c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, d_year#135, 5), ENSURE_REQUIREMENTS, [plan_id=16]

(104) HashAggregate [codegen id : 23]
Input [10]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, d_year#135, sum#138, isEmpty#139]
Keys [8]: [c_customer_id#121, c_first_name#122, c_last_name#123, c_preferred_cust_flag#124, c_birth_country#125, c_login#126, c_email_address#127, d_year#135]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#133 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#132 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#130 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#131 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#133 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#132 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#130 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#131 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#117]
Results [2]: [c_customer_id#121 AS customer_id#140, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#133 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#132 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#130 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#131 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))#117 AS year_total#141]

(105) BroadcastExchange
Input [2]: [customer_id#140, year_total#141]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=17]

(106) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [customer_id#22]
Right keys [1]: [customer_id#140]
Join condition: (CASE WHEN (year_total#74 > 0.000000) THEN CheckOverflow((promote_precision(year_total#96) / promote_precision(year_total#74)), DecimalType(38,14)) END > CASE WHEN (year_total#119 > 0.000000) THEN CheckOverflow((promote_precision(year_total#141) / promote_precision(year_total#119)), DecimalType(38,14)) END)

(107) Project [codegen id : 24]
Output [7]: [customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50]
Input [13]: [customer_id#22, customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50, year_total#74, year_total#96, year_total#119, customer_id#140, year_total#141]

(108) TakeOrderedAndProject
Input [7]: [customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50]
Arguments: 100, [customer_id#44 ASC NULLS FIRST, customer_first_name#45 ASC NULLS FIRST, customer_last_name#46 ASC NULLS FIRST, customer_preferred_cust_flag#47 ASC NULLS FIRST, customer_birth_country#48 ASC NULLS FIRST, customer_login#49 ASC NULLS FIRST, customer_email_address#50 ASC NULLS FIRST], [customer_id#44, customer_first_name#45, customer_last_name#46, customer_preferred_cust_flag#47, customer_birth_country#48, customer_login#49, customer_email_address#50]

===== Subqueries =====

Subquery:1 Hosting operator id = 4 Hosting Expression = ss_sold_date_sk#9 IN dynamicpruning#142
BroadcastExchange (112)
+- * Project (111)
   +- * Filter (110)
      +- BatchScan spark_catalog.default.date_dim (109)


(109) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#15, d_year#16]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_year IS NOT NULL, d_year = 2001, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(110) Filter [codegen id : 1]
Input [2]: [d_date_sk#15, d_year#16]
Condition : ((isnotnull(d_year#16) AND (d_year#16 = 2001)) AND isnotnull(d_date_sk#15))

(111) Project [codegen id : 1]
Output [2]: [d_date_sk#15, d_year#16]
Input [2]: [d_date_sk#15, d_year#16]

(112) BroadcastExchange
Input [2]: [d_date_sk#15, d_year#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=18]

Subquery:2 Hosting operator id = 20 Hosting Expression = ss_sold_date_sk#32 IN dynamicpruning#143
BroadcastExchange (116)
+- * Project (115)
   +- * Filter (114)
      +- BatchScan spark_catalog.default.date_dim (113)


(113) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#38, d_year#39]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_year IS NOT NULL, d_year = 2002, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(114) Filter [codegen id : 1]
Input [2]: [d_date_sk#38, d_year#39]
Condition : ((isnotnull(d_year#39) AND (d_year#39 = 2002)) AND isnotnull(d_date_sk#38))

(115) Project [codegen id : 1]
Output [2]: [d_date_sk#38, d_year#39]
Input [2]: [d_date_sk#38, d_year#39]

(116) BroadcastExchange
Input [2]: [d_date_sk#38, d_year#39]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=19]

Subquery:3 Hosting operator id = 37 Hosting Expression = cs_sold_date_sk#60 IN dynamicpruning#142

Subquery:4 Hosting operator id = 56 Hosting Expression = cs_sold_date_sk#83 IN dynamicpruning#143

Subquery:5 Hosting operator id = 74 Hosting Expression = ws_sold_date_sk#105 IN dynamicpruning#142

Subquery:6 Hosting operator id = 93 Hosting Expression = ws_sold_date_sk#128 IN dynamicpruning#143


