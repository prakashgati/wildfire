== Physical Plan ==
TakeOrderedAndProject (85)
+- * Project (84)
   +- * BroadcastHashJoin Inner BuildRight (83)
      :- * Project (58)
      :  +- * BroadcastHashJoin Inner BuildRight (57)
      :     :- * HashAggregate (29)
      :     :  +- Exchange (28)
      :     :     +- * HashAggregate (27)
      :     :        +- * Project (26)
      :     :           +- * BroadcastHashJoin Inner BuildRight (25)
      :     :              :- * Project (9)
      :     :              :  +- * BroadcastHashJoin Inner BuildRight (8)
      :     :              :     :- * Project (3)
      :     :              :     :  +- * Filter (2)
      :     :              :     :     +- BatchScan spark_catalog.default.store_returns (1)
      :     :              :     +- BroadcastExchange (7)
      :     :              :        +- * Project (6)
      :     :              :           +- * Filter (5)
      :     :              :              +- BatchScan spark_catalog.default.item (4)
      :     :              +- BroadcastExchange (24)
      :     :                 +- * Project (23)
      :     :                    +- * BroadcastHashJoin LeftSemi BuildRight (22)
      :     :                       :- * Project (12)
      :     :                       :  +- * Filter (11)
      :     :                       :     +- BatchScan spark_catalog.default.date_dim (10)
      :     :                       +- BroadcastExchange (21)
      :     :                          +- * Project (20)
      :     :                             +- * BroadcastHashJoin LeftSemi BuildRight (19)
      :     :                                :- * Project (14)
      :     :                                :  +- BatchScan spark_catalog.default.date_dim (13)
      :     :                                +- BroadcastExchange (18)
      :     :                                   +- * Project (17)
      :     :                                      +- * Filter (16)
      :     :                                         +- BatchScan spark_catalog.default.date_dim (15)
      :     +- BroadcastExchange (56)
      :        +- * HashAggregate (55)
      :           +- Exchange (54)
      :              +- * HashAggregate (53)
      :                 +- * Project (52)
      :                    +- * BroadcastHashJoin Inner BuildRight (51)
      :                       :- * Project (38)
      :                       :  +- * BroadcastHashJoin Inner BuildRight (37)
      :                       :     :- * Project (32)
      :                       :     :  +- * Filter (31)
      :                       :     :     +- BatchScan spark_catalog.default.catalog_returns (30)
      :                       :     +- BroadcastExchange (36)
      :                       :        +- * Project (35)
      :                       :           +- * Filter (34)
      :                       :              +- BatchScan spark_catalog.default.item (33)
      :                       +- BroadcastExchange (50)
      :                          +- * Project (49)
      :                             +- * BroadcastHashJoin LeftSemi BuildRight (48)
      :                                :- * Project (41)
      :                                :  +- * Filter (40)
      :                                :     +- BatchScan spark_catalog.default.date_dim (39)
      :                                +- BroadcastExchange (47)
      :                                   +- * Project (46)
      :                                      +- * BroadcastHashJoin LeftSemi BuildRight (45)
      :                                         :- * Project (43)
      :                                         :  +- BatchScan spark_catalog.default.date_dim (42)
      :                                         +- ReusedExchange (44)
      +- BroadcastExchange (82)
         +- * HashAggregate (81)
            +- Exchange (80)
               +- * HashAggregate (79)
                  +- * Project (78)
                     +- * BroadcastHashJoin Inner BuildRight (77)
                        :- * Project (64)
                        :  +- * BroadcastHashJoin Inner BuildRight (63)
                        :     :- * Project (61)
                        :     :  +- * Filter (60)
                        :     :     +- BatchScan spark_catalog.default.web_returns (59)
                        :     +- ReusedExchange (62)
                        +- BroadcastExchange (76)
                           +- * Project (75)
                              +- * BroadcastHashJoin LeftSemi BuildRight (74)
                                 :- * Project (67)
                                 :  +- * Filter (66)
                                 :     +- BatchScan spark_catalog.default.date_dim (65)
                                 +- BroadcastExchange (73)
                                    +- * Project (72)
                                       +- * BroadcastHashJoin LeftSemi BuildRight (71)
                                          :- * Project (69)
                                          :  +- BatchScan spark_catalog.default.date_dim (68)
                                          +- ReusedExchange (70)


(1) BatchScan spark_catalog.default.store_returns
Output [3]: [sr_returned_date_sk#1, sr_item_sk#2, sr_return_quantity#3]
spark_catalog.default.store_returns [scan class = SparkBatchQueryScan] [filters=sr_item_sk IS NOT NULL, sr_returned_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 5]
Input [3]: [sr_returned_date_sk#1, sr_item_sk#2, sr_return_quantity#3]
Condition : (isnotnull(sr_item_sk#2) AND isnotnull(sr_returned_date_sk#1))

(3) Project [codegen id : 5]
Output [3]: [sr_returned_date_sk#1, sr_item_sk#2, sr_return_quantity#3]
Input [3]: [sr_returned_date_sk#1, sr_item_sk#2, sr_return_quantity#3]

(4) BatchScan spark_catalog.default.item
Output [2]: [i_item_sk#4, i_item_id#5]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_item_sk IS NOT NULL, i_item_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [2]: [i_item_sk#4, i_item_id#5]
Condition : (isnotnull(i_item_sk#4) AND isnotnull(i_item_id#5))

(6) Project [codegen id : 1]
Output [2]: [i_item_sk#4, i_item_id#5]
Input [2]: [i_item_sk#4, i_item_id#5]

(7) BroadcastExchange
Input [2]: [i_item_sk#4, i_item_id#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [sr_item_sk#2]
Right keys [1]: [i_item_sk#4]
Join condition: None

(9) Project [codegen id : 5]
Output [3]: [sr_returned_date_sk#1, sr_return_quantity#3, i_item_id#5]
Input [5]: [sr_returned_date_sk#1, sr_item_sk#2, sr_return_quantity#3, i_item_sk#4, i_item_id#5]

(10) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#6, d_date#7]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(11) Filter [codegen id : 4]
Input [2]: [d_date_sk#6, d_date#7]
Condition : isnotnull(d_date_sk#6)

(12) Project [codegen id : 4]
Output [2]: [d_date_sk#6, d_date#7]
Input [2]: [d_date_sk#6, d_date#7]

(13) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date#8, d_week_seq#9]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(14) Project [codegen id : 3]
Output [2]: [d_date#8, d_week_seq#9]
Input [2]: [d_date#8, d_week_seq#9]

(15) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date#10, d_week_seq#11]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(16) Filter [codegen id : 2]
Input [2]: [d_date#10, d_week_seq#11]
Condition : cast(d_date#10 as string) IN (2000-06-30,2000-09-27,2000-11-17)

(17) Project [codegen id : 2]
Output [1]: [d_week_seq#11]
Input [2]: [d_date#10, d_week_seq#11]

(18) BroadcastExchange
Input [1]: [d_week_seq#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(19) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [d_week_seq#9]
Right keys [1]: [d_week_seq#11]
Join condition: None

(20) Project [codegen id : 3]
Output [1]: [d_date#8]
Input [2]: [d_date#8, d_week_seq#9]

(21) BroadcastExchange
Input [1]: [d_date#8]
Arguments: HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=3]

(22) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [d_date#7]
Right keys [1]: [d_date#8]
Join condition: None

(23) Project [codegen id : 4]
Output [1]: [d_date_sk#6]
Input [2]: [d_date_sk#6, d_date#7]

(24) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

(25) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [sr_returned_date_sk#1]
Right keys [1]: [d_date_sk#6]
Join condition: None

(26) Project [codegen id : 5]
Output [2]: [sr_return_quantity#3, i_item_id#5]
Input [4]: [sr_returned_date_sk#1, sr_return_quantity#3, i_item_id#5, d_date_sk#6]

(27) HashAggregate [codegen id : 5]
Input [2]: [sr_return_quantity#3, i_item_id#5]
Keys [1]: [i_item_id#5]
Functions [1]: [partial_sum(sr_return_quantity#3)]
Aggregate Attributes [1]: [sum#12]
Results [2]: [i_item_id#5, sum#13]

(28) Exchange
Input [2]: [i_item_id#5, sum#13]
Arguments: hashpartitioning(i_item_id#5, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(29) HashAggregate [codegen id : 18]
Input [2]: [i_item_id#5, sum#13]
Keys [1]: [i_item_id#5]
Functions [1]: [sum(sr_return_quantity#3)]
Aggregate Attributes [1]: [sum(sr_return_quantity#3)#14]
Results [2]: [i_item_id#5 AS item_id#15, sum(sr_return_quantity#3)#14 AS sr_item_qty#16]

(30) BatchScan spark_catalog.default.catalog_returns
Output [3]: [cr_returned_date_sk#17, cr_item_sk#18, cr_return_quantity#19]
spark_catalog.default.catalog_returns [scan class = SparkBatchQueryScan] [filters=cr_item_sk IS NOT NULL, cr_returned_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(31) Filter [codegen id : 10]
Input [3]: [cr_returned_date_sk#17, cr_item_sk#18, cr_return_quantity#19]
Condition : (isnotnull(cr_item_sk#18) AND isnotnull(cr_returned_date_sk#17))

(32) Project [codegen id : 10]
Output [3]: [cr_returned_date_sk#17, cr_item_sk#18, cr_return_quantity#19]
Input [3]: [cr_returned_date_sk#17, cr_item_sk#18, cr_return_quantity#19]

(33) BatchScan spark_catalog.default.item
Output [2]: [i_item_sk#20, i_item_id#21]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_item_sk IS NOT NULL, i_item_id IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(34) Filter [codegen id : 6]
Input [2]: [i_item_sk#20, i_item_id#21]
Condition : (isnotnull(i_item_sk#20) AND isnotnull(i_item_id#21))

(35) Project [codegen id : 6]
Output [2]: [i_item_sk#20, i_item_id#21]
Input [2]: [i_item_sk#20, i_item_id#21]

(36) BroadcastExchange
Input [2]: [i_item_sk#20, i_item_id#21]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

(37) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cr_item_sk#18]
Right keys [1]: [i_item_sk#20]
Join condition: None

(38) Project [codegen id : 10]
Output [3]: [cr_returned_date_sk#17, cr_return_quantity#19, i_item_id#21]
Input [5]: [cr_returned_date_sk#17, cr_item_sk#18, cr_return_quantity#19, i_item_sk#20, i_item_id#21]

(39) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#22, d_date#23]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(40) Filter [codegen id : 9]
Input [2]: [d_date_sk#22, d_date#23]
Condition : isnotnull(d_date_sk#22)

(41) Project [codegen id : 9]
Output [2]: [d_date_sk#22, d_date#23]
Input [2]: [d_date_sk#22, d_date#23]

(42) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date#24, d_week_seq#25]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(43) Project [codegen id : 8]
Output [2]: [d_date#24, d_week_seq#25]
Input [2]: [d_date#24, d_week_seq#25]

(44) ReusedExchange [Reuses operator id: 18]
Output [1]: [d_week_seq#26]

(45) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [d_week_seq#25]
Right keys [1]: [d_week_seq#26]
Join condition: None

(46) Project [codegen id : 8]
Output [1]: [d_date#24]
Input [2]: [d_date#24, d_week_seq#25]

(47) BroadcastExchange
Input [1]: [d_date#24]
Arguments: HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=7]

(48) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [d_date#23]
Right keys [1]: [d_date#24]
Join condition: None

(49) Project [codegen id : 9]
Output [1]: [d_date_sk#22]
Input [2]: [d_date_sk#22, d_date#23]

(50) BroadcastExchange
Input [1]: [d_date_sk#22]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

(51) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cr_returned_date_sk#17]
Right keys [1]: [d_date_sk#22]
Join condition: None

(52) Project [codegen id : 10]
Output [2]: [cr_return_quantity#19, i_item_id#21]
Input [4]: [cr_returned_date_sk#17, cr_return_quantity#19, i_item_id#21, d_date_sk#22]

(53) HashAggregate [codegen id : 10]
Input [2]: [cr_return_quantity#19, i_item_id#21]
Keys [1]: [i_item_id#21]
Functions [1]: [partial_sum(cr_return_quantity#19)]
Aggregate Attributes [1]: [sum#27]
Results [2]: [i_item_id#21, sum#28]

(54) Exchange
Input [2]: [i_item_id#21, sum#28]
Arguments: hashpartitioning(i_item_id#21, 5), ENSURE_REQUIREMENTS, [plan_id=9]

(55) HashAggregate [codegen id : 11]
Input [2]: [i_item_id#21, sum#28]
Keys [1]: [i_item_id#21]
Functions [1]: [sum(cr_return_quantity#19)]
Aggregate Attributes [1]: [sum(cr_return_quantity#19)#29]
Results [2]: [i_item_id#21 AS item_id#30, sum(cr_return_quantity#19)#29 AS cr_item_qty#31]

(56) BroadcastExchange
Input [2]: [item_id#30, cr_item_qty#31]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=10]

(57) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [item_id#15]
Right keys [1]: [item_id#30]
Join condition: None

(58) Project [codegen id : 18]
Output [3]: [item_id#15, sr_item_qty#16, cr_item_qty#31]
Input [4]: [item_id#15, sr_item_qty#16, item_id#30, cr_item_qty#31]

(59) BatchScan spark_catalog.default.web_returns
Output [3]: [wr_returned_date_sk#32, wr_item_sk#33, wr_return_quantity#34]
spark_catalog.default.web_returns [scan class = SparkBatchQueryScan] [filters=wr_item_sk IS NOT NULL, wr_returned_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(60) Filter [codegen id : 16]
Input [3]: [wr_returned_date_sk#32, wr_item_sk#33, wr_return_quantity#34]
Condition : (isnotnull(wr_item_sk#33) AND isnotnull(wr_returned_date_sk#32))

(61) Project [codegen id : 16]
Output [3]: [wr_returned_date_sk#32, wr_item_sk#33, wr_return_quantity#34]
Input [3]: [wr_returned_date_sk#32, wr_item_sk#33, wr_return_quantity#34]

(62) ReusedExchange [Reuses operator id: 36]
Output [2]: [i_item_sk#35, i_item_id#36]

(63) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [wr_item_sk#33]
Right keys [1]: [i_item_sk#35]
Join condition: None

(64) Project [codegen id : 16]
Output [3]: [wr_returned_date_sk#32, wr_return_quantity#34, i_item_id#36]
Input [5]: [wr_returned_date_sk#32, wr_item_sk#33, wr_return_quantity#34, i_item_sk#35, i_item_id#36]

(65) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#37, d_date#38]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(66) Filter [codegen id : 15]
Input [2]: [d_date_sk#37, d_date#38]
Condition : isnotnull(d_date_sk#37)

(67) Project [codegen id : 15]
Output [2]: [d_date_sk#37, d_date#38]
Input [2]: [d_date_sk#37, d_date#38]

(68) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date#39, d_week_seq#40]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(69) Project [codegen id : 14]
Output [2]: [d_date#39, d_week_seq#40]
Input [2]: [d_date#39, d_week_seq#40]

(70) ReusedExchange [Reuses operator id: 18]
Output [1]: [d_week_seq#41]

(71) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [d_week_seq#40]
Right keys [1]: [d_week_seq#41]
Join condition: None

(72) Project [codegen id : 14]
Output [1]: [d_date#39]
Input [2]: [d_date#39, d_week_seq#40]

(73) BroadcastExchange
Input [1]: [d_date#39]
Arguments: HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=11]

(74) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [d_date#38]
Right keys [1]: [d_date#39]
Join condition: None

(75) Project [codegen id : 15]
Output [1]: [d_date_sk#37]
Input [2]: [d_date_sk#37, d_date#38]

(76) BroadcastExchange
Input [1]: [d_date_sk#37]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12]

(77) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [wr_returned_date_sk#32]
Right keys [1]: [d_date_sk#37]
Join condition: None

(78) Project [codegen id : 16]
Output [2]: [wr_return_quantity#34, i_item_id#36]
Input [4]: [wr_returned_date_sk#32, wr_return_quantity#34, i_item_id#36, d_date_sk#37]

(79) HashAggregate [codegen id : 16]
Input [2]: [wr_return_quantity#34, i_item_id#36]
Keys [1]: [i_item_id#36]
Functions [1]: [partial_sum(wr_return_quantity#34)]
Aggregate Attributes [1]: [sum#42]
Results [2]: [i_item_id#36, sum#43]

(80) Exchange
Input [2]: [i_item_id#36, sum#43]
Arguments: hashpartitioning(i_item_id#36, 5), ENSURE_REQUIREMENTS, [plan_id=13]

(81) HashAggregate [codegen id : 17]
Input [2]: [i_item_id#36, sum#43]
Keys [1]: [i_item_id#36]
Functions [1]: [sum(wr_return_quantity#34)]
Aggregate Attributes [1]: [sum(wr_return_quantity#34)#44]
Results [2]: [i_item_id#36 AS item_id#45, sum(wr_return_quantity#34)#44 AS wr_item_qty#46]

(82) BroadcastExchange
Input [2]: [item_id#45, wr_item_qty#46]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=14]

(83) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [item_id#15]
Right keys [1]: [item_id#45]
Join condition: None

(84) Project [codegen id : 18]
Output [8]: [item_id#15, sr_item_qty#16, (((cast(sr_item_qty#16 as double) / cast(((sr_item_qty#16 + cr_item_qty#31) + wr_item_qty#46) as double)) / 3.0) * 100.0) AS sr_dev#47, cr_item_qty#31, (((cast(cr_item_qty#31 as double) / cast(((sr_item_qty#16 + cr_item_qty#31) + wr_item_qty#46) as double)) / 3.0) * 100.0) AS cr_dev#48, wr_item_qty#46, (((cast(wr_item_qty#46 as double) / cast(((sr_item_qty#16 + cr_item_qty#31) + wr_item_qty#46) as double)) / 3.0) * 100.0) AS wr_dev#49, CheckOverflow((promote_precision(cast(((sr_item_qty#16 + cr_item_qty#31) + wr_item_qty#46) as decimal(21,1))) / 3.0), DecimalType(27,6)) AS average#50]
Input [5]: [item_id#15, sr_item_qty#16, cr_item_qty#31, item_id#45, wr_item_qty#46]

(85) TakeOrderedAndProject
Input [8]: [item_id#15, sr_item_qty#16, sr_dev#47, cr_item_qty#31, cr_dev#48, wr_item_qty#46, wr_dev#49, average#50]
Arguments: 100, [item_id#15 ASC NULLS FIRST, sr_item_qty#16 ASC NULLS FIRST], [item_id#15, sr_item_qty#16, sr_dev#47, cr_item_qty#31, cr_dev#48, wr_item_qty#46, wr_dev#49, average#50]

