== Physical Plan ==
* HashAggregate (36)
+- Exchange (35)
   +- * HashAggregate (34)
      +- * HashAggregate (33)
         +- Exchange (32)
            +- * HashAggregate (31)
               +- * Project (30)
                  +- * BroadcastHashJoin Inner BuildRight (29)
                     :- * Project (24)
                     :  +- * BroadcastHashJoin Inner BuildRight (23)
                     :     :- * Project (18)
                     :     :  +- * BroadcastHashJoin Inner BuildRight (17)
                     :     :     :- * BroadcastHashJoin LeftAnti BuildRight (12)
                     :     :     :  :- * Project (8)
                     :     :     :  :  +- * BroadcastHashJoin LeftSemi BuildRight (7)
                     :     :     :  :     :- * Project (3)
                     :     :     :  :     :  +- * Filter (2)
                     :     :     :  :     :     +- BatchScan spark_catalog.default.web_sales (1)
                     :     :     :  :     +- BroadcastExchange (6)
                     :     :     :  :        +- * Project (5)
                     :     :     :  :           +- BatchScan spark_catalog.default.web_sales (4)
                     :     :     :  +- BroadcastExchange (11)
                     :     :     :     +- * Project (10)
                     :     :     :        +- BatchScan spark_catalog.default.web_returns (9)
                     :     :     +- BroadcastExchange (16)
                     :     :        +- * Project (15)
                     :     :           +- * Filter (14)
                     :     :              +- BatchScan spark_catalog.default.date_dim (13)
                     :     +- BroadcastExchange (22)
                     :        +- * Project (21)
                     :           +- * Filter (20)
                     :              +- BatchScan spark_catalog.default.customer_address (19)
                     +- BroadcastExchange (28)
                        +- * Project (27)
                           +- * Filter (26)
                              +- BatchScan spark_catalog.default.web_site (25)


(1) BatchScan spark_catalog.default.web_sales
Output [7]: [ws_ship_date_sk#1, ws_ship_addr_sk#2, ws_web_site_sk#3, ws_warehouse_sk#4, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
spark_catalog.default.web_sales [scan class = SparkBatchQueryScan] [filters=ws_ship_date_sk IS NOT NULL, ws_ship_addr_sk IS NOT NULL, ws_web_site_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 6]
Input [7]: [ws_ship_date_sk#1, ws_ship_addr_sk#2, ws_web_site_sk#3, ws_warehouse_sk#4, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
Condition : ((isnotnull(ws_ship_date_sk#1) AND isnotnull(ws_ship_addr_sk#2)) AND isnotnull(ws_web_site_sk#3))

(3) Project [codegen id : 6]
Output [7]: [ws_ship_date_sk#1, ws_ship_addr_sk#2, ws_web_site_sk#3, ws_warehouse_sk#4, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
Input [7]: [ws_ship_date_sk#1, ws_ship_addr_sk#2, ws_web_site_sk#3, ws_warehouse_sk#4, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]

(4) BatchScan spark_catalog.default.web_sales
Output [34]: [ws_sold_date_sk#8, ws_sold_time_sk#9, ws_ship_date_sk#10, ws_item_sk#11, ws_bill_customer_sk#12, ws_bill_cdemo_sk#13, ws_bill_hdemo_sk#14, ws_bill_addr_sk#15, ws_ship_customer_sk#16, ws_ship_cdemo_sk#17, ws_ship_hdemo_sk#18, ws_ship_addr_sk#19, ws_web_page_sk#20, ws_web_site_sk#21, ws_ship_mode_sk#22, ws_warehouse_sk#23, ws_promo_sk#24, ws_order_number#25, ws_quantity#26, ws_wholesale_cost#27, ws_list_price#28, ws_sales_price#29, ws_ext_discount_amt#30, ws_ext_sales_price#31, ws_ext_wholesale_cost#32, ws_ext_list_price#33, ws_ext_tax#34, ws_coupon_amt#35, ws_ext_ship_cost#36, ws_net_paid#37, ws_net_paid_inc_tax#38, ws_net_paid_inc_ship#39, ws_net_paid_inc_ship_tax#40, ws_net_profit#41]
spark_catalog.default.web_sales [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Project [codegen id : 1]
Output [2]: [ws_warehouse_sk#23, ws_order_number#25]
Input [34]: [ws_sold_date_sk#8, ws_sold_time_sk#9, ws_ship_date_sk#10, ws_item_sk#11, ws_bill_customer_sk#12, ws_bill_cdemo_sk#13, ws_bill_hdemo_sk#14, ws_bill_addr_sk#15, ws_ship_customer_sk#16, ws_ship_cdemo_sk#17, ws_ship_hdemo_sk#18, ws_ship_addr_sk#19, ws_web_page_sk#20, ws_web_site_sk#21, ws_ship_mode_sk#22, ws_warehouse_sk#23, ws_promo_sk#24, ws_order_number#25, ws_quantity#26, ws_wholesale_cost#27, ws_list_price#28, ws_sales_price#29, ws_ext_discount_amt#30, ws_ext_sales_price#31, ws_ext_wholesale_cost#32, ws_ext_list_price#33, ws_ext_tax#34, ws_coupon_amt#35, ws_ext_ship_cost#36, ws_net_paid#37, ws_net_paid_inc_tax#38, ws_net_paid_inc_ship#39, ws_net_paid_inc_ship_tax#40, ws_net_profit#41]

(6) BroadcastExchange
Input [2]: [ws_warehouse_sk#23, ws_order_number#25]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=1]

(7) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_order_number#5]
Right keys [1]: [ws_order_number#25]
Join condition: NOT (ws_warehouse_sk#4 = ws_warehouse_sk#23)

(8) Project [codegen id : 6]
Output [6]: [ws_ship_date_sk#1, ws_ship_addr_sk#2, ws_web_site_sk#3, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
Input [7]: [ws_ship_date_sk#1, ws_ship_addr_sk#2, ws_web_site_sk#3, ws_warehouse_sk#4, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]

(9) BatchScan spark_catalog.default.web_returns
Output [24]: [wr_returned_date_sk#42, wr_returned_time_sk#43, wr_item_sk#44, wr_refunded_customer_sk#45, wr_refunded_cdemo_sk#46, wr_refunded_hdemo_sk#47, wr_refunded_addr_sk#48, wr_returning_customer_sk#49, wr_returning_cdemo_sk#50, wr_returning_hdemo_sk#51, wr_returning_addr_sk#52, wr_web_page_sk#53, wr_reason_sk#54, wr_order_number#55, wr_return_quantity#56, wr_return_amt#57, wr_return_tax#58, wr_return_amt_inc_tax#59, wr_fee#60, wr_return_ship_cost#61, wr_refunded_cash#62, wr_reversed_charge#63, wr_account_credit#64, wr_net_loss#65]
spark_catalog.default.web_returns [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(10) Project [codegen id : 2]
Output [1]: [wr_order_number#55]
Input [24]: [wr_returned_date_sk#42, wr_returned_time_sk#43, wr_item_sk#44, wr_refunded_customer_sk#45, wr_refunded_cdemo_sk#46, wr_refunded_hdemo_sk#47, wr_refunded_addr_sk#48, wr_returning_customer_sk#49, wr_returning_cdemo_sk#50, wr_returning_hdemo_sk#51, wr_returning_addr_sk#52, wr_web_page_sk#53, wr_reason_sk#54, wr_order_number#55, wr_return_quantity#56, wr_return_amt#57, wr_return_tax#58, wr_return_amt_inc_tax#59, wr_fee#60, wr_return_ship_cost#61, wr_refunded_cash#62, wr_reversed_charge#63, wr_account_credit#64, wr_net_loss#65]

(11) BroadcastExchange
Input [1]: [wr_order_number#55]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(12) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_order_number#5]
Right keys [1]: [wr_order_number#55]
Join condition: None

(13) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#66, d_date#67]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_date IS NOT NULL, d_date >= 10623, d_date <= 10683, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(14) Filter [codegen id : 3]
Input [2]: [d_date_sk#66, d_date#67]
Condition : (((isnotnull(d_date#67) AND (d_date#67 >= 1999-02-01)) AND (d_date#67 <= 1999-04-02)) AND isnotnull(d_date_sk#66))

(15) Project [codegen id : 3]
Output [1]: [d_date_sk#66]
Input [2]: [d_date_sk#66, d_date#67]

(16) BroadcastExchange
Input [1]: [d_date_sk#66]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(17) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_ship_date_sk#1]
Right keys [1]: [d_date_sk#66]
Join condition: None

(18) Project [codegen id : 6]
Output [5]: [ws_ship_addr_sk#2, ws_web_site_sk#3, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
Input [7]: [ws_ship_date_sk#1, ws_ship_addr_sk#2, ws_web_site_sk#3, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7, d_date_sk#66]

(19) BatchScan spark_catalog.default.customer_address
Output [2]: [ca_address_sk#68, ca_state#69]
spark_catalog.default.customer_address [scan class = SparkBatchQueryScan] [filters=ca_state IS NOT NULL, ca_state = 'IL', ca_address_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(20) Filter [codegen id : 4]
Input [2]: [ca_address_sk#68, ca_state#69]
Condition : ((isnotnull(ca_state#69) AND (ca_state#69 = IL)) AND isnotnull(ca_address_sk#68))

(21) Project [codegen id : 4]
Output [1]: [ca_address_sk#68]
Input [2]: [ca_address_sk#68, ca_state#69]

(22) BroadcastExchange
Input [1]: [ca_address_sk#68]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

(23) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_ship_addr_sk#2]
Right keys [1]: [ca_address_sk#68]
Join condition: None

(24) Project [codegen id : 6]
Output [4]: [ws_web_site_sk#3, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
Input [6]: [ws_ship_addr_sk#2, ws_web_site_sk#3, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7, ca_address_sk#68]

(25) BatchScan spark_catalog.default.web_site
Output [2]: [web_site_sk#70, web_company_name#71]
spark_catalog.default.web_site [scan class = SparkBatchQueryScan] [filters=web_company_name IS NOT NULL, web_company_name = 'pri', web_site_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(26) Filter [codegen id : 5]
Input [2]: [web_site_sk#70, web_company_name#71]
Condition : ((isnotnull(web_company_name#71) AND (web_company_name#71 = pri)) AND isnotnull(web_site_sk#70))

(27) Project [codegen id : 5]
Output [1]: [web_site_sk#70]
Input [2]: [web_site_sk#70, web_company_name#71]

(28) BroadcastExchange
Input [1]: [web_site_sk#70]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

(29) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_web_site_sk#3]
Right keys [1]: [web_site_sk#70]
Join condition: None

(30) Project [codegen id : 6]
Output [3]: [ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
Input [5]: [ws_web_site_sk#3, ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7, web_site_sk#70]

(31) HashAggregate [codegen id : 6]
Input [3]: [ws_order_number#5, ws_ext_ship_cost#6, ws_net_profit#7]
Keys [1]: [ws_order_number#5]
Functions [2]: [partial_sum(UnscaledValue(ws_ext_ship_cost#6)), partial_sum(UnscaledValue(ws_net_profit#7))]
Aggregate Attributes [2]: [sum(UnscaledValue(ws_ext_ship_cost#6))#72, sum(UnscaledValue(ws_net_profit#7))#73]
Results [3]: [ws_order_number#5, sum#74, sum#75]

(32) Exchange
Input [3]: [ws_order_number#5, sum#74, sum#75]
Arguments: hashpartitioning(ws_order_number#5, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(33) HashAggregate [codegen id : 7]
Input [3]: [ws_order_number#5, sum#74, sum#75]
Keys [1]: [ws_order_number#5]
Functions [2]: [merge_sum(UnscaledValue(ws_ext_ship_cost#6)), merge_sum(UnscaledValue(ws_net_profit#7))]
Aggregate Attributes [2]: [sum(UnscaledValue(ws_ext_ship_cost#6))#72, sum(UnscaledValue(ws_net_profit#7))#73]
Results [3]: [ws_order_number#5, sum#74, sum#75]

(34) HashAggregate [codegen id : 7]
Input [3]: [ws_order_number#5, sum#74, sum#75]
Keys: []
Functions [3]: [merge_sum(UnscaledValue(ws_ext_ship_cost#6)), merge_sum(UnscaledValue(ws_net_profit#7)), partial_count(distinct ws_order_number#5)]
Aggregate Attributes [3]: [sum(UnscaledValue(ws_ext_ship_cost#6))#72, sum(UnscaledValue(ws_net_profit#7))#73, count(ws_order_number#5)#76]
Results [3]: [sum#74, sum#75, count#77]

(35) Exchange
Input [3]: [sum#74, sum#75, count#77]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=7]

(36) HashAggregate [codegen id : 8]
Input [3]: [sum#74, sum#75, count#77]
Keys: []
Functions [3]: [sum(UnscaledValue(ws_ext_ship_cost#6)), sum(UnscaledValue(ws_net_profit#7)), count(distinct ws_order_number#5)]
Aggregate Attributes [3]: [sum(UnscaledValue(ws_ext_ship_cost#6))#72, sum(UnscaledValue(ws_net_profit#7))#73, count(ws_order_number#5)#76]
Results [3]: [count(ws_order_number#5)#76 AS order count #78, MakeDecimal(sum(UnscaledValue(ws_ext_ship_cost#6))#72,17,2) AS total shipping cost #79, MakeDecimal(sum(UnscaledValue(ws_net_profit#7))#73,17,2) AS total net profit #80]

