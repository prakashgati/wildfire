== Physical Plan ==
TakeOrderedAndProject (23)
+- * HashAggregate (22)
   +- Exchange (21)
      +- * HashAggregate (20)
         +- * Expand (19)
            +- * Project (18)
               +- * BroadcastHashJoin Inner BuildRight (17)
                  :- * Project (12)
                  :  +- * BroadcastHashJoin Inner BuildRight (11)
                  :     :- * Project (6)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (5)
                  :     :     :- * Project (3)
                  :     :     :  +- * Filter (2)
                  :     :     :     +- BatchScan spark_catalog.default.inventory (1)
                  :     :     +- ReusedExchange (4)
                  :     +- BroadcastExchange (10)
                  :        +- * Project (9)
                  :           +- * Filter (8)
                  :              +- BatchScan spark_catalog.default.item (7)
                  +- BroadcastExchange (16)
                     +- * Project (15)
                        +- * Filter (14)
                           +- BatchScan spark_catalog.default.warehouse (13)


(1) BatchScan spark_catalog.default.inventory
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
spark_catalog.default.inventory [scan class = SparkBatchQueryScan] [filters=inv_date_sk IS NOT NULL, inv_item_sk IS NOT NULL, inv_warehouse_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Condition : ((isnotnull(inv_date_sk#1) AND isnotnull(inv_item_sk#2)) AND isnotnull(inv_warehouse_sk#3))

(3) Project [codegen id : 4]
Output [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Input [4]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]

(4) ReusedExchange [Reuses operator id: 27]
Output [1]: [d_date_sk#5]

(5) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#1]
Right keys [1]: [d_date_sk#5]
Join condition: None

(6) Project [codegen id : 4]
Output [3]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4]
Input [5]: [inv_date_sk#1, inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, d_date_sk#5]

(7) BatchScan spark_catalog.default.item
Output [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(8) Filter [codegen id : 2]
Input [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Condition : isnotnull(i_item_sk#6)

(9) Project [codegen id : 2]
Output [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Input [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]

(10) BroadcastExchange
Input [5]: [i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(11) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#2]
Right keys [1]: [i_item_sk#6]
Join condition: None

(12) Project [codegen id : 4]
Output [6]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#7, i_class#8, i_category#9, i_product_name#10]
Input [8]: [inv_item_sk#2, inv_warehouse_sk#3, inv_quantity_on_hand#4, i_item_sk#6, i_brand#7, i_class#8, i_category#9, i_product_name#10]

(13) BatchScan spark_catalog.default.warehouse
Output [1]: [w_warehouse_sk#11]
spark_catalog.default.warehouse [scan class = SparkBatchQueryScan] [filters=w_warehouse_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(14) Filter [codegen id : 3]
Input [1]: [w_warehouse_sk#11]
Condition : isnotnull(w_warehouse_sk#11)

(15) Project [codegen id : 3]
Output [1]: [w_warehouse_sk#11]
Input [1]: [w_warehouse_sk#11]

(16) BroadcastExchange
Input [1]: [w_warehouse_sk#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(17) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#3]
Right keys [1]: [w_warehouse_sk#11]
Join condition: None

(18) Project [codegen id : 4]
Output [5]: [inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, i_category#9]
Input [7]: [inv_warehouse_sk#3, inv_quantity_on_hand#4, i_brand#7, i_class#8, i_category#9, i_product_name#10, w_warehouse_sk#11]

(19) Expand [codegen id : 4]
Input [5]: [inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, i_category#9]
Arguments: [[inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, i_category#9, 0], [inv_quantity_on_hand#4, i_product_name#10, i_brand#7, i_class#8, null, 1], [inv_quantity_on_hand#4, i_product_name#10, i_brand#7, null, null, 3], [inv_quantity_on_hand#4, i_product_name#10, null, null, null, 7], [inv_quantity_on_hand#4, null, null, null, null, 15]], [inv_quantity_on_hand#4, i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16]

(20) HashAggregate [codegen id : 4]
Input [6]: [inv_quantity_on_hand#4, i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16]
Keys [5]: [i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16]
Functions [1]: [partial_avg(inv_quantity_on_hand#4)]
Aggregate Attributes [2]: [sum#17, count#18]
Results [7]: [i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16, sum#19, count#20]

(21) Exchange
Input [7]: [i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16, sum#19, count#20]
Arguments: hashpartitioning(i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(22) HashAggregate [codegen id : 5]
Input [7]: [i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16, sum#19, count#20]
Keys [5]: [i_product_name#12, i_brand#13, i_class#14, i_category#15, spark_grouping_id#16]
Functions [1]: [avg(inv_quantity_on_hand#4)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#4)#21]
Results [5]: [i_product_name#12, i_brand#13, i_class#14, i_category#15, avg(inv_quantity_on_hand#4)#21 AS qoh#22]

(23) TakeOrderedAndProject
Input [5]: [i_product_name#12, i_brand#13, i_class#14, i_category#15, qoh#22]
Arguments: 100, [qoh#22 ASC NULLS FIRST, i_product_name#12 ASC NULLS FIRST, i_brand#13 ASC NULLS FIRST, i_class#14 ASC NULLS FIRST, i_category#15 ASC NULLS FIRST], [i_product_name#12, i_brand#13, i_class#14, i_category#15, qoh#22]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = inv_date_sk#1 IN dynamicpruning#23
BroadcastExchange (27)
+- * Project (26)
   +- * Filter (25)
      +- BatchScan spark_catalog.default.date_dim (24)


(24) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#24]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_month_seq IS NOT NULL, d_month_seq >= 1200, d_month_seq <= 1211, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(25) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#24]
Condition : (((isnotnull(d_month_seq#24) AND (d_month_seq#24 >= 1200)) AND (d_month_seq#24 <= 1211)) AND isnotnull(d_date_sk#5))

(26) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_month_seq#24]

(27) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]


