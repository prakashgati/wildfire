== Physical Plan ==
* HashAggregate (28)
+- Exchange (27)
   +- * HashAggregate (26)
      +- * Project (25)
         +- * BroadcastHashJoin Inner BuildRight (24)
            :- * Project (22)
            :  +- * BroadcastHashJoin Inner BuildRight (21)
            :     :- * Project (9)
            :     :  +- * BroadcastHashJoin Inner BuildRight (8)
            :     :     :- * Project (3)
            :     :     :  +- * Filter (2)
            :     :     :     +- BatchScan spark_catalog.default.web_sales (1)
            :     :     +- BroadcastExchange (7)
            :     :        +- * Project (6)
            :     :           +- * Filter (5)
            :     :              +- BatchScan spark_catalog.default.item (4)
            :     +- BroadcastExchange (20)
            :        +- * Filter (19)
            :           +- * HashAggregate (18)
            :              +- Exchange (17)
            :                 +- * HashAggregate (16)
            :                    +- * Project (15)
            :                       +- * BroadcastHashJoin Inner BuildRight (14)
            :                          :- * Project (12)
            :                          :  +- * Filter (11)
            :                          :     +- BatchScan spark_catalog.default.web_sales (10)
            :                          +- ReusedExchange (13)
            +- ReusedExchange (23)


(1) BatchScan spark_catalog.default.web_sales
Output [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]
spark_catalog.default.web_sales [scan class = SparkBatchQueryScan] [filters=ws_item_sk IS NOT NULL, ws_ext_discount_amt IS NOT NULL, ws_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 6]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]
Condition : ((isnotnull(ws_item_sk#2) AND isnotnull(ws_ext_discount_amt#3)) AND isnotnull(ws_sold_date_sk#1))

(3) Project [codegen id : 6]
Output [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]
Input [3]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3]

(4) BatchScan spark_catalog.default.item
Output [2]: [i_item_sk#4, i_manufact_id#5]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_manufact_id IS NOT NULL, i_manufact_id = 350, i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [2]: [i_item_sk#4, i_manufact_id#5]
Condition : ((isnotnull(i_manufact_id#5) AND (i_manufact_id#5 = 350)) AND isnotnull(i_item_sk#4))

(6) Project [codegen id : 1]
Output [1]: [i_item_sk#4]
Input [2]: [i_item_sk#4, i_manufact_id#5]

(7) BroadcastExchange
Input [1]: [i_item_sk#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_item_sk#2]
Right keys [1]: [i_item_sk#4]
Join condition: None

(9) Project [codegen id : 6]
Output [3]: [ws_sold_date_sk#1, ws_ext_discount_amt#3, i_item_sk#4]
Input [4]: [ws_sold_date_sk#1, ws_item_sk#2, ws_ext_discount_amt#3, i_item_sk#4]

(10) BatchScan spark_catalog.default.web_sales
Output [3]: [ws_sold_date_sk#6, ws_item_sk#7, ws_ext_discount_amt#8]
spark_catalog.default.web_sales [scan class = SparkBatchQueryScan] [filters=ws_sold_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(11) Filter [codegen id : 3]
Input [3]: [ws_sold_date_sk#6, ws_item_sk#7, ws_ext_discount_amt#8]
Condition : (isnotnull(ws_sold_date_sk#6) AND isnotnull(ws_item_sk#7))

(12) Project [codegen id : 3]
Output [3]: [ws_sold_date_sk#6, ws_item_sk#7, ws_ext_discount_amt#8]
Input [3]: [ws_sold_date_sk#6, ws_item_sk#7, ws_ext_discount_amt#8]

(13) ReusedExchange [Reuses operator id: 32]
Output [1]: [d_date_sk#9]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#6]
Right keys [1]: [d_date_sk#9]
Join condition: None

(15) Project [codegen id : 3]
Output [2]: [ws_item_sk#7, ws_ext_discount_amt#8]
Input [4]: [ws_sold_date_sk#6, ws_item_sk#7, ws_ext_discount_amt#8, d_date_sk#9]

(16) HashAggregate [codegen id : 3]
Input [2]: [ws_item_sk#7, ws_ext_discount_amt#8]
Keys [1]: [ws_item_sk#7]
Functions [1]: [partial_avg(UnscaledValue(ws_ext_discount_amt#8))]
Aggregate Attributes [2]: [sum#10, count#11]
Results [3]: [ws_item_sk#7, sum#12, count#13]

(17) Exchange
Input [3]: [ws_item_sk#7, sum#12, count#13]
Arguments: hashpartitioning(ws_item_sk#7, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(18) HashAggregate [codegen id : 4]
Input [3]: [ws_item_sk#7, sum#12, count#13]
Keys [1]: [ws_item_sk#7]
Functions [1]: [avg(UnscaledValue(ws_ext_discount_amt#8))]
Aggregate Attributes [1]: [avg(UnscaledValue(ws_ext_discount_amt#8))#14]
Results [2]: [CheckOverflow((1.300000 * promote_precision(cast((avg(UnscaledValue(ws_ext_discount_amt#8))#14 / 100.0) as decimal(11,6)))), DecimalType(14,7)) AS (1.3 * avg(ws_ext_discount_amt))#15, ws_item_sk#7]

(19) Filter [codegen id : 4]
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#15, ws_item_sk#7]
Condition : isnotnull((1.3 * avg(ws_ext_discount_amt))#15)

(20) BroadcastExchange
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#15, ws_item_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=3]

(21) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [i_item_sk#4]
Right keys [1]: [ws_item_sk#7]
Join condition: (cast(ws_ext_discount_amt#3 as decimal(14,7)) > (1.3 * avg(ws_ext_discount_amt))#15)

(22) Project [codegen id : 6]
Output [2]: [ws_sold_date_sk#1, ws_ext_discount_amt#3]
Input [5]: [ws_sold_date_sk#1, ws_ext_discount_amt#3, i_item_sk#4, (1.3 * avg(ws_ext_discount_amt))#15, ws_item_sk#7]

(23) ReusedExchange [Reuses operator id: 32]
Output [1]: [d_date_sk#16]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_sold_date_sk#1]
Right keys [1]: [d_date_sk#16]
Join condition: None

(25) Project [codegen id : 6]
Output [1]: [ws_ext_discount_amt#3]
Input [3]: [ws_sold_date_sk#1, ws_ext_discount_amt#3, d_date_sk#16]

(26) HashAggregate [codegen id : 6]
Input [1]: [ws_ext_discount_amt#3]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ws_ext_discount_amt#3))]
Aggregate Attributes [1]: [sum#17]
Results [1]: [sum#18]

(27) Exchange
Input [1]: [sum#18]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=4]

(28) HashAggregate [codegen id : 7]
Input [1]: [sum#18]
Keys: []
Functions [1]: [sum(UnscaledValue(ws_ext_discount_amt#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_discount_amt#3))#19]
Results [1]: [MakeDecimal(sum(UnscaledValue(ws_ext_discount_amt#3))#19,17,2) AS Excess Discount Amount #20]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#1 IN dynamicpruning#21
BroadcastExchange (32)
+- * Project (31)
   +- * Filter (30)
      +- BatchScan spark_catalog.default.date_dim (29)


(29) BatchScan spark_catalog.default.date_dim
Output [2]: [d_date_sk#16, d_date#22]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_date IS NOT NULL, d_date >= 10983, d_date <= 11073, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(30) Filter [codegen id : 1]
Input [2]: [d_date_sk#16, d_date#22]
Condition : (((isnotnull(d_date#22) AND (d_date#22 >= 2000-01-27)) AND (d_date#22 <= 2000-04-26)) AND isnotnull(d_date_sk#16))

(31) Project [codegen id : 1]
Output [1]: [d_date_sk#16]
Input [2]: [d_date_sk#16, d_date#22]

(32) BroadcastExchange
Input [1]: [d_date_sk#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

Subquery:2 Hosting operator id = 10 Hosting Expression = ws_sold_date_sk#6 IN dynamicpruning#21


