== Physical Plan ==
TakeOrderedAndProject (61)
+- * HashAggregate (60)
   +- Exchange (59)
      +- * HashAggregate (58)
         +- Union (57)
            :- * HashAggregate (26)
            :  +- Exchange (25)
            :     +- * HashAggregate (24)
            :        +- * Project (23)
            :           +- * BroadcastHashJoin Inner BuildRight (22)
            :              :- * Project (12)
            :              :  +- * BroadcastHashJoin Inner BuildRight (11)
            :              :     :- * Project (6)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (5)
            :              :     :     :- * Project (3)
            :              :     :     :  +- * Filter (2)
            :              :     :     :     +- BatchScan spark_catalog.default.store_sales (1)
            :              :     :     +- ReusedExchange (4)
            :              :     +- BroadcastExchange (10)
            :              :        +- * Project (9)
            :              :           +- * Filter (8)
            :              :              +- BatchScan spark_catalog.default.customer_address (7)
            :              +- BroadcastExchange (21)
            :                 +- * BroadcastHashJoin LeftSemi BuildRight (20)
            :                    :- * Project (15)
            :                    :  +- * Filter (14)
            :                    :     +- BatchScan spark_catalog.default.item (13)
            :                    +- BroadcastExchange (19)
            :                       +- * Project (18)
            :                          +- * Filter (17)
            :                             +- BatchScan spark_catalog.default.item (16)
            :- * HashAggregate (41)
            :  +- Exchange (40)
            :     +- * HashAggregate (39)
            :        +- * Project (38)
            :           +- * BroadcastHashJoin Inner BuildRight (37)
            :              :- * Project (35)
            :              :  +- * BroadcastHashJoin Inner BuildRight (34)
            :              :     :- * Project (32)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (31)
            :              :     :     :- * Project (29)
            :              :     :     :  +- * Filter (28)
            :              :     :     :     +- BatchScan spark_catalog.default.catalog_sales (27)
            :              :     :     +- ReusedExchange (30)
            :              :     +- ReusedExchange (33)
            :              +- ReusedExchange (36)
            +- * HashAggregate (56)
               +- Exchange (55)
                  +- * HashAggregate (54)
                     +- * Project (53)
                        +- * BroadcastHashJoin Inner BuildRight (52)
                           :- * Project (50)
                           :  +- * BroadcastHashJoin Inner BuildRight (49)
                           :     :- * Project (47)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (46)
                           :     :     :- * Project (44)
                           :     :     :  +- * Filter (43)
                           :     :     :     +- BatchScan spark_catalog.default.web_sales (42)
                           :     :     +- ReusedExchange (45)
                           :     +- ReusedExchange (48)
                           +- ReusedExchange (51)


(1) BatchScan spark_catalog.default.store_sales
Output [4]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]
spark_catalog.default.store_sales [scan class = SparkBatchQueryScan] [filters=ss_sold_date_sk IS NOT NULL, ss_addr_sk IS NOT NULL, ss_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 5]
Input [4]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]
Condition : ((isnotnull(ss_sold_date_sk#1) AND isnotnull(ss_addr_sk#3)) AND isnotnull(ss_item_sk#2))

(3) Project [codegen id : 5]
Output [4]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]
Input [4]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]

(4) ReusedExchange [Reuses operator id: 65]
Output [1]: [d_date_sk#5]

(5) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_sold_date_sk#1]
Right keys [1]: [d_date_sk#5]
Join condition: None

(6) Project [codegen id : 5]
Output [3]: [ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4]
Input [5]: [ss_sold_date_sk#1, ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4, d_date_sk#5]

(7) BatchScan spark_catalog.default.customer_address
Output [2]: [ca_address_sk#6, ca_gmt_offset#7]
spark_catalog.default.customer_address [scan class = SparkBatchQueryScan] [filters=ca_gmt_offset IS NOT NULL, ca_gmt_offset = -5.00, ca_address_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(8) Filter [codegen id : 2]
Input [2]: [ca_address_sk#6, ca_gmt_offset#7]
Condition : ((isnotnull(ca_gmt_offset#7) AND (ca_gmt_offset#7 = -5.00)) AND isnotnull(ca_address_sk#6))

(9) Project [codegen id : 2]
Output [1]: [ca_address_sk#6]
Input [2]: [ca_address_sk#6, ca_gmt_offset#7]

(10) BroadcastExchange
Input [1]: [ca_address_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(11) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_addr_sk#3]
Right keys [1]: [ca_address_sk#6]
Join condition: None

(12) Project [codegen id : 5]
Output [2]: [ss_item_sk#2, ss_ext_sales_price#4]
Input [4]: [ss_item_sk#2, ss_addr_sk#3, ss_ext_sales_price#4, ca_address_sk#6]

(13) BatchScan spark_catalog.default.item
Output [2]: [i_item_sk#8, i_manufact_id#9]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(14) Filter [codegen id : 4]
Input [2]: [i_item_sk#8, i_manufact_id#9]
Condition : isnotnull(i_item_sk#8)

(15) Project [codegen id : 4]
Output [2]: [i_item_sk#8, i_manufact_id#9]
Input [2]: [i_item_sk#8, i_manufact_id#9]

(16) BatchScan spark_catalog.default.item
Output [2]: [i_category#10, i_manufact_id#11]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_category IS NOT NULL, i_category = 'Electronics'], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(17) Filter [codegen id : 3]
Input [2]: [i_category#10, i_manufact_id#11]
Condition : (isnotnull(i_category#10) AND (i_category#10 = Electronics))

(18) Project [codegen id : 3]
Output [1]: [i_manufact_id#11]
Input [2]: [i_category#10, i_manufact_id#11]

(19) BroadcastExchange
Input [1]: [i_manufact_id#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(20) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_manufact_id#9]
Right keys [1]: [i_manufact_id#11]
Join condition: None

(21) BroadcastExchange
Input [2]: [i_item_sk#8, i_manufact_id#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(22) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [i_item_sk#8]
Join condition: None

(23) Project [codegen id : 5]
Output [2]: [ss_ext_sales_price#4, i_manufact_id#9]
Input [4]: [ss_item_sk#2, ss_ext_sales_price#4, i_item_sk#8, i_manufact_id#9]

(24) HashAggregate [codegen id : 5]
Input [2]: [ss_ext_sales_price#4, i_manufact_id#9]
Keys [1]: [i_manufact_id#9]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#4))]
Aggregate Attributes [1]: [sum#12]
Results [2]: [i_manufact_id#9, sum#13]

(25) Exchange
Input [2]: [i_manufact_id#9, sum#13]
Arguments: hashpartitioning(i_manufact_id#9, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(26) HashAggregate [codegen id : 6]
Input [2]: [i_manufact_id#9, sum#13]
Keys [1]: [i_manufact_id#9]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#4))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#4))#14]
Results [2]: [i_manufact_id#9, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#4))#14,17,2) AS total_sales#15]

(27) BatchScan spark_catalog.default.catalog_sales
Output [4]: [cs_sold_date_sk#16, cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19]
spark_catalog.default.catalog_sales [scan class = SparkBatchQueryScan] [filters=cs_sold_date_sk IS NOT NULL, cs_bill_addr_sk IS NOT NULL, cs_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(28) Filter [codegen id : 11]
Input [4]: [cs_sold_date_sk#16, cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19]
Condition : ((isnotnull(cs_sold_date_sk#16) AND isnotnull(cs_bill_addr_sk#17)) AND isnotnull(cs_item_sk#18))

(29) Project [codegen id : 11]
Output [4]: [cs_sold_date_sk#16, cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19]
Input [4]: [cs_sold_date_sk#16, cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19]

(30) ReusedExchange [Reuses operator id: 65]
Output [1]: [d_date_sk#20]

(31) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#16]
Right keys [1]: [d_date_sk#20]
Join condition: None

(32) Project [codegen id : 11]
Output [3]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19]
Input [5]: [cs_sold_date_sk#16, cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19, d_date_sk#20]

(33) ReusedExchange [Reuses operator id: 10]
Output [1]: [ca_address_sk#21]

(34) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_bill_addr_sk#17]
Right keys [1]: [ca_address_sk#21]
Join condition: None

(35) Project [codegen id : 11]
Output [2]: [cs_item_sk#18, cs_ext_sales_price#19]
Input [4]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19, ca_address_sk#21]

(36) ReusedExchange [Reuses operator id: 21]
Output [2]: [i_item_sk#22, i_manufact_id#23]

(37) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#18]
Right keys [1]: [i_item_sk#22]
Join condition: None

(38) Project [codegen id : 11]
Output [2]: [cs_ext_sales_price#19, i_manufact_id#23]
Input [4]: [cs_item_sk#18, cs_ext_sales_price#19, i_item_sk#22, i_manufact_id#23]

(39) HashAggregate [codegen id : 11]
Input [2]: [cs_ext_sales_price#19, i_manufact_id#23]
Keys [1]: [i_manufact_id#23]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#19))]
Aggregate Attributes [1]: [sum#24]
Results [2]: [i_manufact_id#23, sum#25]

(40) Exchange
Input [2]: [i_manufact_id#23, sum#25]
Arguments: hashpartitioning(i_manufact_id#23, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(41) HashAggregate [codegen id : 12]
Input [2]: [i_manufact_id#23, sum#25]
Keys [1]: [i_manufact_id#23]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#19))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#19))#26]
Results [2]: [i_manufact_id#23, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#19))#26,17,2) AS total_sales#27]

(42) BatchScan spark_catalog.default.web_sales
Output [4]: [ws_sold_date_sk#28, ws_item_sk#29, ws_bill_addr_sk#30, ws_ext_sales_price#31]
spark_catalog.default.web_sales [scan class = SparkBatchQueryScan] [filters=ws_sold_date_sk IS NOT NULL, ws_bill_addr_sk IS NOT NULL, ws_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(43) Filter [codegen id : 17]
Input [4]: [ws_sold_date_sk#28, ws_item_sk#29, ws_bill_addr_sk#30, ws_ext_sales_price#31]
Condition : ((isnotnull(ws_sold_date_sk#28) AND isnotnull(ws_bill_addr_sk#30)) AND isnotnull(ws_item_sk#29))

(44) Project [codegen id : 17]
Output [4]: [ws_sold_date_sk#28, ws_item_sk#29, ws_bill_addr_sk#30, ws_ext_sales_price#31]
Input [4]: [ws_sold_date_sk#28, ws_item_sk#29, ws_bill_addr_sk#30, ws_ext_sales_price#31]

(45) ReusedExchange [Reuses operator id: 65]
Output [1]: [d_date_sk#32]

(46) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#28]
Right keys [1]: [d_date_sk#32]
Join condition: None

(47) Project [codegen id : 17]
Output [3]: [ws_item_sk#29, ws_bill_addr_sk#30, ws_ext_sales_price#31]
Input [5]: [ws_sold_date_sk#28, ws_item_sk#29, ws_bill_addr_sk#30, ws_ext_sales_price#31, d_date_sk#32]

(48) ReusedExchange [Reuses operator id: 10]
Output [1]: [ca_address_sk#33]

(49) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_bill_addr_sk#30]
Right keys [1]: [ca_address_sk#33]
Join condition: None

(50) Project [codegen id : 17]
Output [2]: [ws_item_sk#29, ws_ext_sales_price#31]
Input [4]: [ws_item_sk#29, ws_bill_addr_sk#30, ws_ext_sales_price#31, ca_address_sk#33]

(51) ReusedExchange [Reuses operator id: 21]
Output [2]: [i_item_sk#34, i_manufact_id#35]

(52) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_item_sk#29]
Right keys [1]: [i_item_sk#34]
Join condition: None

(53) Project [codegen id : 17]
Output [2]: [ws_ext_sales_price#31, i_manufact_id#35]
Input [4]: [ws_item_sk#29, ws_ext_sales_price#31, i_item_sk#34, i_manufact_id#35]

(54) HashAggregate [codegen id : 17]
Input [2]: [ws_ext_sales_price#31, i_manufact_id#35]
Keys [1]: [i_manufact_id#35]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#31))]
Aggregate Attributes [1]: [sum#36]
Results [2]: [i_manufact_id#35, sum#37]

(55) Exchange
Input [2]: [i_manufact_id#35, sum#37]
Arguments: hashpartitioning(i_manufact_id#35, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(56) HashAggregate [codegen id : 18]
Input [2]: [i_manufact_id#35, sum#37]
Keys [1]: [i_manufact_id#35]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#31))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#31))#38]
Results [2]: [i_manufact_id#35, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#31))#38,17,2) AS total_sales#39]

(57) Union

(58) HashAggregate [codegen id : 19]
Input [2]: [i_manufact_id#9, total_sales#15]
Keys [1]: [i_manufact_id#9]
Functions [1]: [partial_sum(total_sales#15)]
Aggregate Attributes [2]: [sum#40, isEmpty#41]
Results [3]: [i_manufact_id#9, sum#42, isEmpty#43]

(59) Exchange
Input [3]: [i_manufact_id#9, sum#42, isEmpty#43]
Arguments: hashpartitioning(i_manufact_id#9, 5), ENSURE_REQUIREMENTS, [plan_id=7]

(60) HashAggregate [codegen id : 20]
Input [3]: [i_manufact_id#9, sum#42, isEmpty#43]
Keys [1]: [i_manufact_id#9]
Functions [1]: [sum(total_sales#15)]
Aggregate Attributes [1]: [sum(total_sales#15)#44]
Results [2]: [i_manufact_id#9, sum(total_sales#15)#44 AS total_sales#45]

(61) TakeOrderedAndProject
Input [2]: [i_manufact_id#9, total_sales#45]
Arguments: 100, [total_sales#45 ASC NULLS FIRST], [i_manufact_id#9, total_sales#45]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#1 IN dynamicpruning#46
BroadcastExchange (65)
+- * Project (64)
   +- * Filter (63)
      +- BatchScan spark_catalog.default.date_dim (62)


(62) BatchScan spark_catalog.default.date_dim
Output [3]: [d_date_sk#5, d_year#47, d_moy#48]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_year IS NOT NULL, d_moy IS NOT NULL, d_year = 1998, d_moy = 5, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(63) Filter [codegen id : 1]
Input [3]: [d_date_sk#5, d_year#47, d_moy#48]
Condition : ((((isnotnull(d_year#47) AND isnotnull(d_moy#48)) AND (d_year#47 = 1998)) AND (d_moy#48 = 5)) AND isnotnull(d_date_sk#5))

(64) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [3]: [d_date_sk#5, d_year#47, d_moy#48]

(65) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

Subquery:2 Hosting operator id = 27 Hosting Expression = cs_sold_date_sk#16 IN dynamicpruning#46

Subquery:3 Hosting operator id = 42 Hosting Expression = ws_sold_date_sk#28 IN dynamicpruning#46


