== Physical Plan ==
TakeOrderedAndProject (19)
+- * HashAggregate (18)
   +- Exchange (17)
      +- * HashAggregate (16)
         +- * Project (15)
            +- * BroadcastHashJoin Inner BuildRight (14)
               :- * Project (9)
               :  +- * BroadcastHashJoin Inner BuildRight (8)
               :     :- * Project (3)
               :     :  +- * Filter (2)
               :     :     +- BatchScan spark_catalog.default.date_dim (1)
               :     +- BroadcastExchange (7)
               :        +- * Project (6)
               :           +- * Filter (5)
               :              +- BatchScan spark_catalog.default.store_sales (4)
               +- BroadcastExchange (13)
                  +- * Project (12)
                     +- * Filter (11)
                        +- BatchScan spark_catalog.default.item (10)


(1) BatchScan spark_catalog.default.date_dim
Output [3]: [d_date_sk#1, d_year#2, d_moy#3]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_moy IS NOT NULL, d_year IS NOT NULL, d_moy = 12, d_year = 1998, d_date_sk >= 2451149, d_date_sk <= 2451179, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 3]
Input [3]: [d_date_sk#1, d_year#2, d_moy#3]
Condition : ((((((isnotnull(d_moy#3) AND isnotnull(d_year#2)) AND (d_moy#3 = 12)) AND (d_year#2 = 1998)) AND (d_date_sk#1 >= 2451149)) AND (d_date_sk#1 <= 2451179)) AND isnotnull(d_date_sk#1))

(3) Project [codegen id : 3]
Output [2]: [d_date_sk#1, d_year#2]
Input [3]: [d_date_sk#1, d_year#2, d_moy#3]

(4) BatchScan spark_catalog.default.store_sales
Output [3]: [ss_sold_date_sk#4, ss_item_sk#5, ss_ext_sales_price#6]
spark_catalog.default.store_sales [scan class = SparkBatchQueryScan] [filters=ss_sold_date_sk IS NOT NULL, ss_sold_date_sk >= 2451149, ss_sold_date_sk <= 2451179, ss_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [3]: [ss_sold_date_sk#4, ss_item_sk#5, ss_ext_sales_price#6]
Condition : (((isnotnull(ss_sold_date_sk#4) AND (ss_sold_date_sk#4 >= 2451149)) AND (ss_sold_date_sk#4 <= 2451179)) AND isnotnull(ss_item_sk#5))

(6) Project [codegen id : 1]
Output [3]: [ss_sold_date_sk#4, ss_item_sk#5, ss_ext_sales_price#6]
Input [3]: [ss_sold_date_sk#4, ss_item_sk#5, ss_ext_sales_price#6]

(7) BroadcastExchange
Input [3]: [ss_sold_date_sk#4, ss_item_sk#5, ss_ext_sales_price#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [d_date_sk#1]
Right keys [1]: [ss_sold_date_sk#4]
Join condition: None

(9) Project [codegen id : 3]
Output [3]: [d_year#2, ss_item_sk#5, ss_ext_sales_price#6]
Input [5]: [d_date_sk#1, d_year#2, ss_sold_date_sk#4, ss_item_sk#5, ss_ext_sales_price#6]

(10) BatchScan spark_catalog.default.item
Output [4]: [i_item_sk#7, i_category_id#8, i_category#9, i_manager_id#10]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_manager_id IS NOT NULL, i_manager_id = 1, i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(11) Filter [codegen id : 2]
Input [4]: [i_item_sk#7, i_category_id#8, i_category#9, i_manager_id#10]
Condition : ((isnotnull(i_manager_id#10) AND (i_manager_id#10 = 1)) AND isnotnull(i_item_sk#7))

(12) Project [codegen id : 2]
Output [3]: [i_item_sk#7, i_category_id#8, i_category#9]
Input [4]: [i_item_sk#7, i_category_id#8, i_category#9, i_manager_id#10]

(13) BroadcastExchange
Input [3]: [i_item_sk#7, i_category_id#8, i_category#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_item_sk#5]
Right keys [1]: [i_item_sk#7]
Join condition: None

(15) Project [codegen id : 3]
Output [4]: [d_year#2, ss_ext_sales_price#6, i_category_id#8, i_category#9]
Input [6]: [d_year#2, ss_item_sk#5, ss_ext_sales_price#6, i_item_sk#7, i_category_id#8, i_category#9]

(16) HashAggregate [codegen id : 3]
Input [4]: [d_year#2, ss_ext_sales_price#6, i_category_id#8, i_category#9]
Keys [3]: [d_year#2, i_category_id#8, i_category#9]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#6))]
Aggregate Attributes [1]: [sum#11]
Results [4]: [d_year#2, i_category_id#8, i_category#9, sum#12]

(17) Exchange
Input [4]: [d_year#2, i_category_id#8, i_category#9, sum#12]
Arguments: hashpartitioning(d_year#2, i_category_id#8, i_category#9, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(18) HashAggregate [codegen id : 4]
Input [4]: [d_year#2, i_category_id#8, i_category#9, sum#12]
Keys [3]: [d_year#2, i_category_id#8, i_category#9]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#6))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#6))#13]
Results [4]: [d_year#2, i_category_id#8, i_category#9, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#6))#13,17,2) AS sum(ss_ext_sales_price)#14]

(19) TakeOrderedAndProject
Input [4]: [d_year#2, i_category_id#8, i_category#9, sum(ss_ext_sales_price)#14]
Arguments: 100, [sum(ss_ext_sales_price)#14 DESC NULLS LAST, d_year#2 ASC NULLS FIRST, i_category_id#8 ASC NULLS FIRST, i_category#9 ASC NULLS FIRST], [d_year#2, i_category_id#8, i_category#9, sum(ss_ext_sales_price)#14]

