== Physical Plan ==
TakeOrderedAndProject (37)
+- * HashAggregate (36)
   +- Exchange (35)
      +- * HashAggregate (34)
         +- * Project (33)
            +- * BroadcastHashJoin Inner BuildRight (32)
               :- * Project (27)
               :  +- * BroadcastHashJoin Inner BuildRight (26)
               :     :- * Project (21)
               :     :  +- * BroadcastHashJoin Inner BuildRight (20)
               :     :     :- * Project (15)
               :     :     :  +- * BroadcastHashJoin Inner BuildRight (14)
               :     :     :     :- * Project (9)
               :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
               :     :     :     :     :- * Project (3)
               :     :     :     :     :  +- * Filter (2)
               :     :     :     :     :     +- BatchScan spark_catalog.default.date_dim (1)
               :     :     :     :     +- BroadcastExchange (7)
               :     :     :     :        +- * Project (6)
               :     :     :     :           +- * Filter (5)
               :     :     :     :              +- BatchScan spark_catalog.default.store_sales (4)
               :     :     :     +- BroadcastExchange (13)
               :     :     :        +- * Project (12)
               :     :     :           +- * Filter (11)
               :     :     :              +- BatchScan spark_catalog.default.item (10)
               :     :     +- BroadcastExchange (19)
               :     :        +- * Project (18)
               :     :           +- * Filter (17)
               :     :              +- BatchScan spark_catalog.default.customer (16)
               :     +- BroadcastExchange (25)
               :        +- * Project (24)
               :           +- * Filter (23)
               :              +- BatchScan spark_catalog.default.customer_address (22)
               +- BroadcastExchange (31)
                  +- * Project (30)
                     +- * Filter (29)
                        +- BatchScan spark_catalog.default.store (28)


(1) BatchScan spark_catalog.default.date_dim
Output [3]: [d_date_sk#1, d_year#2, d_moy#3]
spark_catalog.default.date_dim [scan class = SparkBatchQueryScan] [filters=d_moy IS NOT NULL, d_year IS NOT NULL, d_moy = 11, d_year = 1999, d_date_sk >= 2451484, d_date_sk <= 2451513, d_date_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 6]
Input [3]: [d_date_sk#1, d_year#2, d_moy#3]
Condition : ((((((isnotnull(d_moy#3) AND isnotnull(d_year#2)) AND (d_moy#3 = 11)) AND (d_year#2 = 1999)) AND (d_date_sk#1 >= 2451484)) AND (d_date_sk#1 <= 2451513)) AND isnotnull(d_date_sk#1))

(3) Project [codegen id : 6]
Output [1]: [d_date_sk#1]
Input [3]: [d_date_sk#1, d_year#2, d_moy#3]

(4) BatchScan spark_catalog.default.store_sales
Output [5]: [ss_sold_date_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8]
spark_catalog.default.store_sales [scan class = SparkBatchQueryScan] [filters=ss_sold_date_sk IS NOT NULL, ss_sold_date_sk >= 2451484, ss_sold_date_sk <= 2451513, ss_item_sk IS NOT NULL, ss_customer_sk IS NOT NULL, ss_store_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [5]: [ss_sold_date_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8]
Condition : (((((isnotnull(ss_sold_date_sk#4) AND (ss_sold_date_sk#4 >= 2451484)) AND (ss_sold_date_sk#4 <= 2451513)) AND isnotnull(ss_item_sk#5)) AND isnotnull(ss_customer_sk#6)) AND isnotnull(ss_store_sk#7))

(6) Project [codegen id : 1]
Output [5]: [ss_sold_date_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8]
Input [5]: [ss_sold_date_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8]

(7) BroadcastExchange
Input [5]: [ss_sold_date_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [d_date_sk#1]
Right keys [1]: [ss_sold_date_sk#4]
Join condition: None

(9) Project [codegen id : 6]
Output [4]: [ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8]
Input [6]: [d_date_sk#1, ss_sold_date_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8]

(10) BatchScan spark_catalog.default.item
Output [6]: [i_item_sk#9, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, i_manager_id#14]
spark_catalog.default.item [scan class = SparkBatchQueryScan] [filters=i_manager_id IS NOT NULL, i_manager_id = 7, i_item_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(11) Filter [codegen id : 2]
Input [6]: [i_item_sk#9, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, i_manager_id#14]
Condition : ((isnotnull(i_manager_id#14) AND (i_manager_id#14 = 7)) AND isnotnull(i_item_sk#9))

(12) Project [codegen id : 2]
Output [5]: [i_item_sk#9, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13]
Input [6]: [i_item_sk#9, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, i_manager_id#14]

(13) BroadcastExchange
Input [5]: [i_item_sk#9, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(14) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_item_sk#5]
Right keys [1]: [i_item_sk#9]
Join condition: None

(15) Project [codegen id : 6]
Output [7]: [ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13]
Input [9]: [ss_item_sk#5, ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8, i_item_sk#9, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13]

(16) BatchScan spark_catalog.default.customer
Output [2]: [c_customer_sk#15, c_current_addr_sk#16]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_customer_sk IS NOT NULL, c_current_addr_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(17) Filter [codegen id : 3]
Input [2]: [c_customer_sk#15, c_current_addr_sk#16]
Condition : (isnotnull(c_customer_sk#15) AND isnotnull(c_current_addr_sk#16))

(18) Project [codegen id : 3]
Output [2]: [c_customer_sk#15, c_current_addr_sk#16]
Input [2]: [c_customer_sk#15, c_current_addr_sk#16]

(19) BroadcastExchange
Input [2]: [c_customer_sk#15, c_current_addr_sk#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(20) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_customer_sk#6]
Right keys [1]: [c_customer_sk#15]
Join condition: None

(21) Project [codegen id : 6]
Output [7]: [ss_store_sk#7, ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, c_current_addr_sk#16]
Input [9]: [ss_customer_sk#6, ss_store_sk#7, ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, c_customer_sk#15, c_current_addr_sk#16]

(22) BatchScan spark_catalog.default.customer_address
Output [2]: [ca_address_sk#17, ca_zip#18]
spark_catalog.default.customer_address [scan class = SparkBatchQueryScan] [filters=ca_address_sk IS NOT NULL, ca_zip IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(23) Filter [codegen id : 4]
Input [2]: [ca_address_sk#17, ca_zip#18]
Condition : (isnotnull(ca_address_sk#17) AND isnotnull(ca_zip#18))

(24) Project [codegen id : 4]
Output [2]: [ca_address_sk#17, ca_zip#18]
Input [2]: [ca_address_sk#17, ca_zip#18]

(25) BroadcastExchange
Input [2]: [ca_address_sk#17, ca_zip#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

(26) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [c_current_addr_sk#16]
Right keys [1]: [ca_address_sk#17]
Join condition: None

(27) Project [codegen id : 6]
Output [7]: [ss_store_sk#7, ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, ca_zip#18]
Input [9]: [ss_store_sk#7, ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, c_current_addr_sk#16, ca_address_sk#17, ca_zip#18]

(28) BatchScan spark_catalog.default.store
Output [2]: [s_store_sk#19, s_zip#20]
spark_catalog.default.store [scan class = SparkBatchQueryScan] [filters=s_zip IS NOT NULL, s_store_sk IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(29) Filter [codegen id : 5]
Input [2]: [s_store_sk#19, s_zip#20]
Condition : (isnotnull(s_zip#20) AND isnotnull(s_store_sk#19))

(30) Project [codegen id : 5]
Output [2]: [s_store_sk#19, s_zip#20]
Input [2]: [s_store_sk#19, s_zip#20]

(31) BroadcastExchange
Input [2]: [s_store_sk#19, s_zip#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

(32) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#19]
Join condition: NOT (substr(ca_zip#18, 1, 5) = substr(s_zip#20, 1, 5))

(33) Project [codegen id : 6]
Output [5]: [ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13]
Input [9]: [ss_store_sk#7, ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13, ca_zip#18, s_store_sk#19, s_zip#20]

(34) HashAggregate [codegen id : 6]
Input [5]: [ss_ext_sales_price#8, i_brand_id#10, i_brand#11, i_manufact_id#12, i_manufact#13]
Keys [4]: [i_brand#11, i_brand_id#10, i_manufact_id#12, i_manufact#13]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#8))]
Aggregate Attributes [1]: [sum#21]
Results [5]: [i_brand#11, i_brand_id#10, i_manufact_id#12, i_manufact#13, sum#22]

(35) Exchange
Input [5]: [i_brand#11, i_brand_id#10, i_manufact_id#12, i_manufact#13, sum#22]
Arguments: hashpartitioning(i_brand#11, i_brand_id#10, i_manufact_id#12, i_manufact#13, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(36) HashAggregate [codegen id : 7]
Input [5]: [i_brand#11, i_brand_id#10, i_manufact_id#12, i_manufact#13, sum#22]
Keys [4]: [i_brand#11, i_brand_id#10, i_manufact_id#12, i_manufact#13]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#8))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#8))#23]
Results [5]: [i_brand_id#10 AS brand_id#24, i_brand#11 AS brand#25, i_manufact_id#12, i_manufact#13, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#8))#23,17,2) AS ext_price#26]

(37) TakeOrderedAndProject
Input [5]: [brand_id#24, brand#25, i_manufact_id#12, i_manufact#13, ext_price#26]
Arguments: 100, [ext_price#26 DESC NULLS LAST, brand#25 ASC NULLS FIRST, brand_id#24 ASC NULLS FIRST, i_manufact_id#12 ASC NULLS FIRST, i_manufact#13 ASC NULLS FIRST], [brand_id#24, brand#25, i_manufact_id#12, i_manufact#13, ext_price#26]

