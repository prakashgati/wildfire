== Physical Plan ==
* Sort (13)
+- Exchange (12)
   +- * HashAggregate (11)
      +- Exchange (10)
         +- * HashAggregate (9)
            +- * Project (8)
               +- * BroadcastHashJoin LeftAnti BuildRight (7)
                  :- * Project (3)
                  :  +- * Filter (2)
                  :     +- BatchScan spark_catalog.default.customer (1)
                  +- BroadcastExchange (6)
                     +- * Project (5)
                        +- BatchScan spark_catalog.default.orders (4)


(1) BatchScan spark_catalog.default.customer
Output [3]: [c_custkey#1, c_phone#2, c_acctbal#3]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_acctbal IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 2]
Input [3]: [c_custkey#1, c_phone#2, c_acctbal#3]
Condition : ((substring(c_phone#2, 1, 2) IN (13,31,23,29,30,18,17) AND isnotnull(c_acctbal#3)) AND (cast(c_acctbal#3 as decimal(14,4)) > Subquery scalar-subquery#4, [id=#5]))

(3) Project [codegen id : 2]
Output [3]: [c_custkey#1, c_phone#2, c_acctbal#3]
Input [3]: [c_custkey#1, c_phone#2, c_acctbal#3]

(4) BatchScan spark_catalog.default.orders
Output [9]: [o_orderkey#6, o_custkey#7, o_orderstatus#8, o_totalprice#9, o_orderdate#10, o_orderpriority#11, o_clerk#12, o_shippriority#13, o_comment#14]
spark_catalog.default.orders [scan class = SparkBatchQueryScan] [filters=], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Project [codegen id : 1]
Output [1]: [o_custkey#7]
Input [9]: [o_orderkey#6, o_custkey#7, o_orderstatus#8, o_totalprice#9, o_orderdate#10, o_orderpriority#11, o_clerk#12, o_shippriority#13, o_comment#14]

(6) BroadcastExchange
Input [1]: [o_custkey#7]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=1]

(7) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [c_custkey#1]
Right keys [1]: [o_custkey#7]
Join condition: None

(8) Project [codegen id : 2]
Output [2]: [substring(c_phone#2, 1, 2) AS cntrycode#15, c_acctbal#3]
Input [3]: [c_custkey#1, c_phone#2, c_acctbal#3]

(9) HashAggregate [codegen id : 2]
Input [2]: [cntrycode#15, c_acctbal#3]
Keys [1]: [cntrycode#15]
Functions [2]: [partial_count(1), partial_sum(c_acctbal#3)]
Aggregate Attributes [3]: [count#16, sum#17, isEmpty#18]
Results [4]: [cntrycode#15, count#19, sum#20, isEmpty#21]

(10) Exchange
Input [4]: [cntrycode#15, count#19, sum#20, isEmpty#21]
Arguments: hashpartitioning(cntrycode#15, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(11) HashAggregate [codegen id : 3]
Input [4]: [cntrycode#15, count#19, sum#20, isEmpty#21]
Keys [1]: [cntrycode#15]
Functions [2]: [count(1), sum(c_acctbal#3)]
Aggregate Attributes [2]: [count(1)#22, sum(c_acctbal#3)#23]
Results [3]: [cntrycode#15, count(1)#22 AS numcust#24, sum(c_acctbal#3)#23 AS totacctbal#25]

(12) Exchange
Input [3]: [cntrycode#15, numcust#24, totacctbal#25]
Arguments: rangepartitioning(cntrycode#15 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(13) Sort [codegen id : 4]
Input [3]: [cntrycode#15, numcust#24, totacctbal#25]
Arguments: [cntrycode#15 ASC NULLS FIRST], true, 0

===== Subqueries =====

Subquery:1 Hosting operator id = 2 Hosting Expression = Subquery scalar-subquery#4, [id=#5]
* HashAggregate (19)
+- Exchange (18)
   +- * HashAggregate (17)
      +- * Project (16)
         +- * Filter (15)
            +- BatchScan spark_catalog.default.customer (14)


(14) BatchScan spark_catalog.default.customer
Output [2]: [c_phone#26, c_acctbal#27]
spark_catalog.default.customer [scan class = SparkBatchQueryScan] [filters=c_acctbal IS NOT NULL, c_acctbal > 0], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(15) Filter [codegen id : 1]
Input [2]: [c_phone#26, c_acctbal#27]
Condition : ((substring(c_phone#26, 1, 2) IN (13,31,23,29,30,18,17) AND isnotnull(c_acctbal#27)) AND (c_acctbal#27 > 0))

(16) Project [codegen id : 1]
Output [1]: [c_acctbal#27]
Input [2]: [c_phone#26, c_acctbal#27]

(17) HashAggregate [codegen id : 1]
Input [1]: [c_acctbal#27]
Keys: []
Functions [1]: [partial_avg(UnscaledValue(c_acctbal#27))]
Aggregate Attributes [2]: [sum#28, count#29]
Results [2]: [sum#30, count#31]

(18) Exchange
Input [2]: [sum#30, count#31]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=4]

(19) HashAggregate [codegen id : 2]
Input [2]: [sum#30, count#31]
Keys: []
Functions [1]: [avg(UnscaledValue(c_acctbal#27))]
Aggregate Attributes [1]: [avg(UnscaledValue(c_acctbal#27))#32]
Results [1]: [cast((avg(UnscaledValue(c_acctbal#27))#32 / 1.0) as decimal(14,4)) AS avg(c_acctbal)#33]


