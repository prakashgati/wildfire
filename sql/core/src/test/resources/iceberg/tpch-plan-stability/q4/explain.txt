== Physical Plan ==
* Sort (14)
+- Exchange (13)
   +- * HashAggregate (12)
      +- Exchange (11)
         +- * HashAggregate (10)
            +- * Project (9)
               +- * BroadcastHashJoin LeftSemi BuildRight (8)
                  :- * Project (3)
                  :  +- * Filter (2)
                  :     +- BatchScan spark_catalog.default.orders (1)
                  +- BroadcastExchange (7)
                     +- * Project (6)
                        +- * Filter (5)
                           +- BatchScan spark_catalog.default.lineitem (4)


(1) BatchScan spark_catalog.default.orders
Output [3]: [o_orderkey#1, o_orderdate#2, o_orderpriority#3]
spark_catalog.default.orders [scan class = SparkBatchQueryScan] [filters=o_orderdate IS NOT NULL, o_orderdate >= 8582, o_orderdate < 8674], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(2) Filter [codegen id : 2]
Input [3]: [o_orderkey#1, o_orderdate#2, o_orderpriority#3]
Condition : ((isnotnull(o_orderdate#2) AND (o_orderdate#2 >= 1993-07-01)) AND (o_orderdate#2 < 1993-10-01))

(3) Project [codegen id : 2]
Output [2]: [o_orderkey#1, o_orderpriority#3]
Input [3]: [o_orderkey#1, o_orderdate#2, o_orderpriority#3]

(4) BatchScan spark_catalog.default.lineitem
Output [16]: [l_orderkey#4, l_partkey#5, l_suppkey#6, l_linenumber#7, l_quantity#8, l_extendedprice#9, l_discount#10, l_tax#11, l_returnflag#12, l_linestatus#13, l_shipdate#14, l_commitdate#15, l_receiptdate#16, l_shipinstruct#17, l_shipmode#18, l_comment#19]
spark_catalog.default.lineitem [scan class = SparkBatchQueryScan] [filters=l_commitdate IS NOT NULL, l_receiptdate IS NOT NULL], [runtimeFilters=[]], caseSensitive=false,[ Broadcast Var UNUSED =]

(5) Filter [codegen id : 1]
Input [16]: [l_orderkey#4, l_partkey#5, l_suppkey#6, l_linenumber#7, l_quantity#8, l_extendedprice#9, l_discount#10, l_tax#11, l_returnflag#12, l_linestatus#13, l_shipdate#14, l_commitdate#15, l_receiptdate#16, l_shipinstruct#17, l_shipmode#18, l_comment#19]
Condition : (((l_commitdate#15 < l_receiptdate#16) AND isnotnull(l_commitdate#15)) AND isnotnull(l_receiptdate#16))

(6) Project [codegen id : 1]
Output [1]: [l_orderkey#4]
Input [16]: [l_orderkey#4, l_partkey#5, l_suppkey#6, l_linenumber#7, l_quantity#8, l_extendedprice#9, l_discount#10, l_tax#11, l_returnflag#12, l_linestatus#13, l_shipdate#14, l_commitdate#15, l_receiptdate#16, l_shipinstruct#17, l_shipmode#18, l_comment#19]

(7) BroadcastExchange
Input [1]: [l_orderkey#4]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [o_orderkey#1]
Right keys [1]: [l_orderkey#4]
Join condition: None

(9) Project [codegen id : 2]
Output [1]: [o_orderpriority#3]
Input [2]: [o_orderkey#1, o_orderpriority#3]

(10) HashAggregate [codegen id : 2]
Input [1]: [o_orderpriority#3]
Keys [1]: [o_orderpriority#3]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#20]
Results [2]: [o_orderpriority#3, count#21]

(11) Exchange
Input [2]: [o_orderpriority#3, count#21]
Arguments: hashpartitioning(o_orderpriority#3, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(12) HashAggregate [codegen id : 3]
Input [2]: [o_orderpriority#3, count#21]
Keys [1]: [o_orderpriority#3]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#22]
Results [2]: [o_orderpriority#3, count(1)#22 AS order_count#23]

(13) Exchange
Input [2]: [o_orderpriority#3, order_count#23]
Arguments: rangepartitioning(o_orderpriority#3 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(14) Sort [codegen id : 4]
Input [2]: [o_orderpriority#3, order_count#23]
Arguments: [o_orderpriority#3 ASC NULLS FIRST], true, 0

